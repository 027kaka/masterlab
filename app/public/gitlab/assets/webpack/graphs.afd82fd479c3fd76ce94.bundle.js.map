{"version":3,"sources":["webpack:///graphs.afd82fd479c3fd76ce94.bundle.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./graphs/stat_graph_contributors_util.js","webpack:///./graphs/stat_graph_contributors.js","webpack:///./graphs/graphs_bundle.js","webpack:///./graphs/stat_graph_contributors_graph.js","webpack:////var/cache/omnibus/src/gitlab-rails/vendor/assets/javascripts/Chart.js"],"names":["webpackJsonp","2tW8","module","exports","__webpack_amd_options__","call","5Zgr","__webpack_exports__","__webpack_require__","parse_log","log","by_author","by_email","data","entry","i","len","total","normalized_email","length","date","this","add_date","author_email","toLowerCase","author_name","add_author","store_data","_","toArray","collection","author","store_commits","store_additions","store_deletions","add","field","value","additions","deletions","get_total_data","parsed_log","total_data","pick_field","sortBy","d","each","push","pick","get_author_data","date_range","author_data","_this","log_entry","parsed_log_entry","parse_log_entry","isEmpty","dates","reverse","parsed_entry","commits","omit","key","in_range","ref","Date","HIFr","$","__WEBPACK_IMPORTED_MODULE_0_d3__","__WEBPACK_IMPORTED_MODULE_0_d3___default","n","__WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__","__WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__","ContributorsStatGraph","prototype","init","author_commits","total_commits","set_current_field","add_master_graph","add_authors_graph","change_date_header","master_graph","draw","limited_author_data","authors","slice","author_graph","author_header","create_author_header","append","format_author_commit_info","class","text","author_commit_info","author_commit_info_span","list_item","style","html","redraw_master","set_data","redraw","redraw_authors","x_domain","redraw_author_commit_info","appendTo","print","print_date_format","a","time","format","author_list_item","find","Jktd","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0_vendor_Chart__","__WEBPACK_IMPORTED_MODULE_0_vendor_Chart___default","__WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors__","window","Chart","U+v5","ContributorsGraph","ContributorsMasterGraph","ContributorsAuthorGraph","bind","fn","me","apply","arguments","extend","child","parent","ctor","constructor","hasProp","__super__","hasOwnProperty","MARGIN","top","right","bottom","left","y_domain","set_x_domain","set_y_domain","max","init_x_domain","extent","init_y_domain","init_domain","set_dates","x","domain","y","set_domain","create_scale","width","height","scale","range","clamp","linear","nice","draw_x_axis","svg","attr","x_axis","draw_y_axis","y_axis","superClass","data1","update_content","area","brush","x_max_domain","process_dates","get_dates","parse_dates","pluck","parseDate","parse","forEach","create_axes","axis","orient","ticks","create_svg","select","create_area","y0","y1","interpolate","create_brush","on","draw_path","datum","add_brush","selectAll","empty","trigger","pop","syvU","__WEBPACK_AMD_DEFINE_RESULT__","root","previous","context","canvas","ctx","computeDimension","element","dimension","document","defaultView","getComputedStyle","getPropertyValue","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","customTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","onAnimationProgress","onAnimationComplete","types","loopable","callback","self","additionalArgs","Array","concat","item","clone","obj","objClone","base","extensionObject","merge","master","args","unshift","indexOf","arrayToSearch","inherits","where","filterCallback","filtered","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","ChartElement","Surrogate","noop","uid","id","warn","str","console","amd","isNumber","isNaN","parseFloat","isFinite","array","Math","min","getDecimalPlaces","cap","valueToCap","maxValue","minValue","num","toString","split","toRadians","radians","degrees","PI","aliasPixel","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","pixelWidth","calculateOrderOfMagnitude","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","val","floor","LN10","template","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","maxSteps","skipFitting","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","templateString","valuesObject","Function","cache","test","replace","join","easingEffects","generateLabels","labelsArray","labelTemplateString","index","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","p","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","addEvent","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","e","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","unbindEvents","bindEvents","arrayOfEvents","events","eventName","chart","getMaximumWidth","domNode","parentNode","clientWidth","getMaximumHeight","clientHeight","getMaximumSize","devicePixelRatio","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","options","resize","initialize","stop","newWidth","newHeight","reflow","render","generateLegend","legendTemplate","destroy","removeProperty","removeAttribute","showTooltip","ChartElements","forceRedraw","activeElements","Elements","changed","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xMax","yMax","xMin","yMin","xPositions","yPositions","dataset","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","label","custom","Element","tooltipPosition","Tooltip","caretHeight","toBase64Image","toDataURL","ChartType","name","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","betweenAngles","startAngle","endAngle","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","shift","startPoint","endPoint","padding","cachedYLabelWidth","cachedHeight","calculateYRange","calculateXLabelRotation","firstRotated","firstWidth","lastWidth","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","cosRotation","originalLabelWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","innerWidth","valueWidth","valueOffset","offsetGridLines","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","drawHorizontalLine","showHorizontalLines","gridLineWidth","gridLineColor","lineColor","xPos","linePos","isRotated","drawVerticalLine","showVerticalLines","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","pointPosition","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","largestPossibleRadius","pointLabelFontSize","furthestRight","furthestLeft","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","timeout","instance","undefined","noConflict","defaultConfig","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","ScaleClass","calculateBarX","datasetCount","datasetIndex","barIndex","xWidth","calculateBaseWidth","xAbsolute","barWidth","calculateBarWidth","activeBars","type","getBarsAtEvent","eachBars","bar","activeBar","highlightFill","highlightStroke","BarClass","datasetObject","dataPoint","datasetLabel","buildScale","activeElement","barsArray","eventPosition","datasetIterator","dataTotal","values","scaleOptions","beginAtZero","currentHeight","updatedRanges","addData","removeData","newScaleProps","easingDecimal","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animateRotate","animateScale","SegmentArc","activeSegments","getSegmentsAtEvent","segment","activeSegment","highlightColor","calculateTotal","datapoint","segmentsArray","location","atIndex","silent","splice","color","highlight","circumference","calculateCircumference","indexToDelete","animDecimal","Doughnut","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","activePoints","getPointsAtEvent","eachPoints","point","activePoint","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointsArray","nextPoint","previousPoint","pointsWithValues","tension","controlPoints","bezierCurveTo","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","scaleShowLine","updateScaleRange","datapoints","scaleSizes","angleShowLineOut","activePointsCollection","mousePosition","fromCenter","anglePerIndex","pointIndex","totalDataArray"],"mappings":"AAAAA,cAAc,KAERC,OACA,SAAUC,EAAQC,ICHxB,SAAAC,GACAF,EAAAC,QAAAC,IDO6BC,KAAKF,OAI5BG,OACA,SAAUJ,EAAQK,EAAqBC,GAE7C,YEbAD,GAAA,GACEE,UAAW,SAASC,GAClB,GAAIC,GAAWC,EAAUC,EAAMC,EAAOC,EAAGC,EAAKC,EAAOC,CAIrD,KAHAD,KACAN,KACAC,KACKG,EAAI,EAAGC,EAAMN,EAAIS,OAAQJ,EAAIC,EAAKD,GAAK,EAC1CD,EAAQJ,EAAIK,GACa,MAArBE,EAAMH,EAAMM,OACdC,KAAKC,SAASR,EAAMM,KAAMH,GAE5BC,EAAmBJ,EAAMS,aAAaC,cACtCX,EAAOF,EAAUG,EAAMW,cAAgBb,EAASM,GACpC,MAARL,IACFA,EAAOQ,KAAKK,WAAWZ,EAAOH,EAAWC,IAEtCC,EAAKC,EAAMM,OACdC,KAAKC,SAASR,EAAMM,KAAMP,GAE5BQ,KAAKM,WAAWb,EAAOG,EAAMH,EAAMM,MAAOP,EAAKC,EAAMM,MAIvD,OAFAH,GAAQW,EAAEC,QAAQZ,GAClBN,EAAYiB,EAAEC,QAAQlB,IAEpBM,MAAOA,EACPN,UAAWA,IAGfW,SAAU,SAASF,EAAMU,GAEvB,MADAA,GAAWV,MACJU,EAAWV,GAAMA,KAAOA,GAEjCM,WAAY,SAASK,EAAQpB,EAAWC,GACtC,GAAIC,GAAMK,CAOV,OANAL,MACAA,EAAKY,YAAcM,EAAON,YAC1BZ,EAAKU,aAAeQ,EAAOR,aAC3BL,EAAmBa,EAAOR,aAAaC,cACvCb,EAAUoB,EAAON,aAAeZ,EAChCD,EAASM,GAAoBL,EACtBA,GAETc,WAAY,SAASb,EAAOG,EAAON,GAGjC,MAFAU,MAAKW,cAAcf,EAAON,GAC1BU,KAAKY,gBAAgBnB,EAAOG,EAAON,GAC5BU,KAAKa,gBAAgBpB,EAAOG,EAAON,IAE5CqB,cAAe,SAASf,EAAON,GAE7B,MADAU,MAAKc,IAAIlB,EAAO,UAAW,GACpBI,KAAKc,IAAIxB,EAAW,UAAW,IAExCwB,IAAK,SAASL,EAAYM,EAAOC,GAI/B,MAHyB,OAArBP,EAAWM,KACbN,EAAWM,GAAS,GAEfN,EAAWM,IAAUC,GAE9BJ,gBAAiB,SAASnB,EAAOG,EAAON,GAKtC,MAJuB,OAAnBG,EAAMwB,YACRxB,EAAMwB,UAAY,GAEpBjB,KAAKc,IAAIlB,EAAO,YAAaH,EAAMwB,WAC5BjB,KAAKc,IAAIxB,EAAW,YAAaG,EAAMwB,YAEhDJ,gBAAiB,SAASpB,EAAOG,EAAON,GAKtC,MAJuB,OAAnBG,EAAMyB,YACRzB,EAAMyB,UAAY,GAEpBlB,KAAKc,IAAIlB,EAAO,YAAaH,EAAMyB,WAC5BlB,KAAKc,IAAIxB,EAAW,YAAaG,EAAMyB,YAEhDC,eAAgB,SAASC,EAAYL,GACnC,GAAI1B,GAAKgC,CAGT,OAFAhC,GAAM+B,EAAWxB,MACjByB,EAAarB,KAAKsB,WAAWjC,EAAK0B,GAC3BR,EAAEgB,OAAOF,EAAY,SAASG,GACnC,MAAOA,GAAEzB,QAGbuB,WAAY,SAASjC,EAAK0B,GACxB,GAAIM,EAKJ,OAJAA,MACAd,EAAEkB,KAAKpC,EAAK,SAASmC,GACnB,MAAOH,GAAWK,KAAKnB,EAAEoB,KAAKH,GAAIT,EAAO,YAEpCM,GAETO,gBAAiB,SAASR,EAAYL,EAAOc,GAC3C,GAAIC,GAAazC,CAejB,OAdkB,OAAdwC,IACFA,EAAa,MAEfxC,EAAM+B,EAAW9B,UACjBwC,KACAvB,EAAEkB,KAAKpC,EAAM,SAAS0C,GACpB,MAAO,UAASC,GACd,GAAIC,EAEJ,IADAA,EAAmBF,EAAMG,gBAAgBF,EAAWjB,EAAOc,IACtDtB,EAAE4B,QAAQF,EAAiBG,OAC9B,MAAON,GAAYJ,KAAKO,KAG3BjC,OACIO,EAAEgB,OAAOO,EAAa,SAASN,GACpC,MAAOA,GAAET,KACRsB,WAELH,gBAAiB,SAASF,EAAWjB,EAAOc,GAC1C,GAAIS,EAgBJ,OAfAA,MACAA,EAAalC,YAAc4B,EAAU5B,YACrCkC,EAAapC,aAAe8B,EAAU9B,aACtCoC,EAAaF,SACbE,EAAaC,QAAUD,EAAarB,UAAYqB,EAAapB,UAAY,EACzEX,EAAEkB,KAAKlB,EAAEiC,KAAKR,EAAW,cAAe,gBAAkB,SAASD,GACjE,MAAO,UAASf,EAAOyB,GACrB,GAAIV,EAAMW,SAAS1B,EAAMjB,KAAM8B,GAI7B,MAHAS,GAAaF,MAAMpB,EAAMjB,MAAQiB,EAAMD,GACvCuB,EAAaC,SAAWvB,EAAMuB,QAC9BD,EAAarB,WAAaD,EAAMC,UACzBqB,EAAapB,WAAaF,EAAME,YAG1ClB,OACIsC,GAETI,SAAU,SAAS3C,EAAM8B,GACvB,GAAIc,EACJ,OAAmB,QAAfd,GAAwBA,EAAW,KAAOc,EAAM,GAAIC,MAAK7C,KAAU4C,GAAOd,EAAW,MF0BvFgB,KACA,SAAUhE,EAAQK,EAAqBC,GAE7C,cAC4B,SAAS2D,GAAyB,GAAIC,GAAmC5D,EAAoB,QAChG6D,EAA2C7D,EAAoB8D,EAAEF,GACjEG,EAA+D/D,EAAoB,QGlK5GgE,EAAAhE,EAAA,OAMAD,GAAA,EAAe,WACb,QAASkE,MAsGT,MApGAA,GAAsBC,UAAUC,KAAO,SAASjE,GAC9C,GAAIkE,GAAgBC,CAOpB,OANAxD,MAAKoB,WAAa+B,EAAA,EAA0B/D,UAAUC,GACtDW,KAAKyD,kBAAkB,WACvBD,EAAgBL,EAAA,EAA0BhC,eAAenB,KAAKoB,WAAYpB,KAAKe,OAC/EwC,EAAiBJ,EAAA,EAA0BvB,gBAAgB5B,KAAKoB,WAAYpB,KAAKe,OACjFf,KAAK0D,iBAAiBF,GACtBxD,KAAK2D,kBAAkBJ,GAChBvD,KAAK4D,sBAGdR,EAAsBC,UAAUK,iBAAmB,SAASrC,GAE1D,MADArB,MAAK6D,aAAe,GAAIX,GAAA,EAAwB7B,GACzCrB,KAAK6D,aAAaC,QAG3BV,EAAsBC,UAAUM,kBAAoB,SAAS7B,GAC3D,GAAIiC,EAGJ,OAFA/D,MAAKgE,WACLD,EAAsBjC,EAAYmC,MAAM,EAAG,KACpC1D,EAAEkB,KAAKsC,EAAsB,SAAShC,GAC3C,MAAO,UAASP,GACd,GAAI0C,GAAcC,CAIlB,OAHAA,GAAgBpC,EAAMqC,qBAAqB5C,GAC3CsB,EAAE,sBAAsBuB,OAAOF,GAC/BpC,EAAMiC,QAAQxC,EAAEpB,aAAe8D,EAAe,GAAIhB,GAAA,EAAwB1B,EAAEY,OACrE8B,EAAaJ,SAErB9D,QAGLoD,EAAsBC,UAAUiB,0BAA4B,SAAS5D,GACnE,GAAI6B,EAKJ,OAJAA,GAAUO,EAAE,WACVyB,MAAS,+BAEXhC,EAAQiC,KAAK9D,EAAO6B,QAAU,YACvBO,EAAE,WAAWuB,OAAO9B,IAG7Ba,EAAsBC,UAAUe,qBAAuB,SAAS1D,GAC9D,GAAI+D,GAAoBC,EAAyBxE,EAAcE,EAAauE,CAe5E,OAdAA,GAAY7B,EAAE,SACZyB,MAAS,SACTK,MAAO,oBAETxE,EAAc0C,EAAE,OAASpC,EAAON,YAAc,SAC9CF,EAAe4C,EAAE,iCAAmCpC,EAAOR,aAAe,QAC1EwE,EAA0B5B,EAAE,WAC1ByB,MAAS,YAEXE,EAAqBzE,KAAKsE,0BAA0B5D,GACpDgE,EAAwBG,KAAKJ,GAC7BE,EAAUN,OAAOjE,GACjBuE,EAAUN,OAAOnE,GACjByE,EAAUN,OAAOK,GACVC,GAGTvB,EAAsBC,UAAUyB,cAAgB,WAC9C,GAAIzD,EAGJ,OAFAA,GAAa8B,EAAA,EAA0BhC,eAAenB,KAAKoB,WAAYpB,KAAKe,OAC5Ef,KAAK6D,aAAakB,SAAS1D,GACpBrB,KAAK6D,aAAamB,UAG3B5B,EAAsBC,UAAU4B,eAAiB,WAC/C,GAAI1B,GAAgB2B,CAIpB,OAHApC,GAAE,MAAM+B,KAAK,IACbK,EAAWhC,EAAA,EAAkBG,UAAU6B,SACvC3B,EAAiBJ,EAAA,EAA0BvB,gBAAgB5B,KAAKoB,WAAYpB,KAAKe,MAAOmE,GACjF3E,EAAEkB,KAAK8B,EAAiB,SAASxB,GACtC,MAAO,UAASP,GAId,MAHAO,GAAMoD,0BAA0B3D,GAChCsB,EAAEf,EAAMiC,QAAQxC,EAAEpB,aAAauE,WAAWS,SAAS,MACnDrD,EAAMiC,QAAQxC,EAAEpB,aAAa2E,SAASvD,EAAEY,OACjCL,EAAMiC,QAAQxC,EAAEpB,aAAa4E,WAErChF,QAGLoD,EAAsBC,UAAUI,kBAAoB,SAAS1C,GAC3D,MAAOf,MAAKe,MAAQA,GAGtBqC,EAAsBC,UAAUO,mBAAqB,WACnD,GAAIyB,GAAOC,EAAmBJ,CAI9B,OAHAA,GAAWhC,EAAA,EAAkBG,UAAU6B,SACvCI,EAAoBtC,EAAAuC,EAAGC,KAAKC,OAAO,YACnCJ,EAAQC,EAAkBJ,EAAS,IAAM,MAAQI,EAAkBJ,EAAS,IACrEpC,EAAE,gBAAgB0B,KAAKa,IAGhCjC,EAAsBC,UAAU8B,0BAA4B,SAASzE,GACnE,GAAI+D,GAAoBiB,CAGxB,OAFAA,GAAmB5C,EAAE9C,KAAKgE,QAAQtD,EAAON,aAAauE,WACtDF,EAAqBzE,KAAKsE,0BAA0B5D,GAC7CgF,EAAiBC,KAAK,QAAQd,KAAKJ,IAGrCrB,OHsKoBpE,KAAKE,EAAqBC,EAAoB,UAIrEyG,KACA,SAAU/G,EAAQK,EAAqBC,GAE7C,YACA0G,QAAOC,eAAe5G,EAAqB,cAAgB8B,OAAO,GAC7C,IAAI+E,GAA6C5G,EAAoB,QACjE6G,EAAqD7G,EAAoB8D,EAAE8C,GAC3EE,EAAyD9G,EAAoB,OI1RtG+G,QAAOC,MAAQH,EAAAT,EACfW,OAAO9C,sBAAwB6C,EAAA,GJmSzBG,OACA,SAAUvH,EAAQK,EAAqBC,GAE7C,cAC4B,SAAS2D,GAAyB,GAAIC,GAAmC5D,EAAoB,QAChG6D,EAA2C7D,EAAoB8D,EAAEF,EAC3D5D,GAAoBqC,EAAEtC,EAAqB,IAAK,WAAa,MAAOmH,KACpElH,EAAoBqC,EAAEtC,EAAqB,IAAK,WAAa,MAAOoH,KK/SnGnH,EAAAqC,EAAAtC,EAAA,qBAAAqH,IAIA,IAAMC,GAAO,SAASC,EAAIC,GAAM,MAAO,YAAa,MAAOD,GAAGE,MAAMD,EAAIE,aAClEC,EAAS,SAASC,EAAOC,GAA+F,QAASC,KAAShH,KAAKiH,YAAcH,EAA1H,IAAK,GAAIrE,KAAOsE,GAAcG,EAAQlI,KAAK+H,EAAQtE,KAAMqE,EAAMrE,GAAOsE,EAAOtE,GAA2J,OAArGuE,GAAK3D,UAAY0D,EAAO1D,UAAWyD,EAAMzD,UAAY,GAAI2D,GAAQF,EAAMK,UAAYJ,EAAO1D,UAAkByD,GAClRI,KAAaE,eAENf,EAAqB,WAChC,QAASA,MAgFT,MA9EAA,GAAkBhD,UAAUgE,QAC1BC,IAAK,GACLC,MAAO,GACPC,OAAQ,GACRC,KAAM,IAGRpB,EAAkBhD,UAAU6B,SAAW,KAEvCmB,EAAkBhD,UAAUqE,SAAW,KAEvCrB,EAAkBhD,UAAUjB,SAE5BiE,EAAkBsB,aAAe,SAASnI,GACxC,MAAO6G,GAAkBhD,UAAU6B,SAAW1F,GAGhD6G,EAAkBuB,aAAe,SAASpI,GACxC,MAAO6G,GAAkBhD,UAAUqE,UACjC,EAAG1E,EAAAuC,EAAGsC,IAAIrI,EAAM,SAASgC,GACvB,MAAOA,GAAEe,QAAUf,EAAEe,SAAWf,EAAEP,WAAaO,EAAEN,cAKvDmF,EAAkByB,cAAgB,SAAStI,GACzC,MAAO6G,GAAkBhD,UAAU6B,SAAWlC,EAAAuC,EAAGwC,OAAOvI,EAAM,SAASgC,GACrE,MAAOA,GAAEzB,QAIbsG,EAAkB2B,cAAgB,SAASxI,GACzC,MAAO6G,GAAkBhD,UAAUqE,UACjC,EAAG1E,EAAAuC,EAAGsC,IAAIrI,EAAM,SAASgC,GACvB,MAAOA,GAAEe,QAAUf,EAAEe,SAAWf,EAAEP,WAAaO,EAAEN,cAKvDmF,EAAkB4B,YAAc,SAASzI,GAEvC,MADA6G,GAAkByB,cAActI,GACzB6G,EAAkB2B,cAAcxI,IAGzC6G,EAAkB6B,UAAY,SAAS1I,GACrC,MAAO6G,GAAkBhD,UAAUjB,MAAQ5C,GAG7C6G,EAAkBhD,UAAUsE,aAAe,WACzC,MAAO3H,MAAKmI,EAAEC,OAAOpI,KAAKkF,WAG5BmB,EAAkBhD,UAAUuE,aAAe,WACzC,MAAO5H,MAAKqI,EAAED,OAAOpI,KAAK0H,WAG5BrB,EAAkBhD,UAAUiF,WAAa,WAEvC,MADAtI,MAAK2H,eACE3H,KAAK4H,gBAGdvB,EAAkBhD,UAAUkF,aAAe,SAASC,EAAOC,GAEzD,MADAzI,MAAKmI,EAAInF,EAAAuC,EAAGC,KAAKkD,QAAQC,OAAO,EAAGH,IAAQI,OAAM,GAC1C5I,KAAKqI,EAAIrF,EAAAuC,EAAGmD,MAAMG,SAASF,OAAOF,EAAQ,IAAIK,QAGvDzC,EAAkBhD,UAAU0F,YAAc,WACxC,MAAO/I,MAAKgJ,IAAI3E,OAAO,KAAK4E,KAAK,QAAS,UAAUA,KAAK,YAAa,gBAAkBjJ,KAAKyI,OAAS,KAAKzJ,KAAKgB,KAAKkJ,SAGvH7C,EAAkBhD,UAAU8F,YAAc,WACxC,MAAOnJ,MAAKgJ,IAAI3E,OAAO,KAAK4E,KAAK,QAAS,UAAUjK,KAAKgB,KAAKoJ,SAGhE/C,EAAkBhD,UAAU0B,SAAW,SAASvF,GAC9C,MAAOQ,MAAKR,KAAOA,GAGd6G,KAGIC,EAA2B,SAAS+C,GAG/C,QAAS/C,GAAwBgD,GAC/BtJ,KAAKR,KAAO8J,EACZtJ,KAAKuJ,eAAiB/C,EAAKxG,KAAKuJ,eAAgBvJ,MAChDA,KAAKwI,MAAQ1F,EAAE,YAAY0F,QAAU,GACrCxI,KAAKyI,OAAS,IACdzI,KAAKmI,EAAI,KACTnI,KAAKqI,EAAI,KACTrI,KAAKkJ,OAAS,KACdlJ,KAAKoJ,OAAS,KACdpJ,KAAKwJ,KAAO,KACZxJ,KAAKgJ,IAAM,KACXhJ,KAAKyJ,MAAQ,KACbzJ,KAAK0J,aAAe,KAsFtB,MApGA7C,GAAOP,EAAyB+C,GAiBhC/C,EAAwBjD,UAAUsG,cAAgB,SAASnK,GACzD,GAAI4C,EAGJ,OAFAA,GAAQpC,KAAK4J,UAAUpK,GACvBQ,KAAK6J,YAAYrK,GACV6G,EAAkB6B,UAAU9F,IAGrCkE,EAAwBjD,UAAUuG,UAAY,SAASpK,GACrD,MAAOe,GAAEuJ,MAAMtK,EAAM,SAGvB8G,EAAwBjD,UAAUwG,YAAc,SAASrK,GACvD,GAAIuK,EAEJ,OADAA,GAAY/G,EAAAuC,EAAGC,KAAKC,OAAO,YAAYuE,MAChCxK,EAAKyK,QAAQ,SAASzI,GAC3B,MAAOA,GAAEzB,KAAOgK,EAAUvI,EAAEzB,SAIhCuG,EAAwBjD,UAAUkF,aAAe,WAC/C,MAAOjC,GAAwBa,UAAUoB,aAAavJ,KAAKgB,KAAMA,KAAKwI,MAAOxI,KAAKyI,SAGpFnC,EAAwBjD,UAAU6G,YAAc,WAE9C,MADAlK,MAAKkJ,OAASlG,EAAAuC,EAAGyD,IAAImB,OAAOzB,MAAM1I,KAAKmI,GAAGiC,OAAO,UAC1CpK,KAAKoJ,OAASpG,EAAAuC,EAAGyD,IAAImB,OAAOzB,MAAM1I,KAAKqI,GAAG+B,OAAO,QAAQC,MAAM,IAGxE/D,EAAwBjD,UAAUiH,WAAa,WAC7C,MAAOtK,MAAKgJ,IAAMhG,EAAAuC,EAAGgF,OAAO,wBAAwBlG,OAAO,OAAO4E,KAAK,QAASjJ,KAAKwI,MAAQxI,KAAKqH,OAAOI,KAAOzH,KAAKqH,OAAOE,OAAO0B,KAAK,SAAUjJ,KAAKyI,OAASzI,KAAKqH,OAAOC,IAAMtH,KAAKqH,OAAOG,QAAQyB,KAAK,QAAS,YAAY5E,OAAO,KAAK4E,KAAK,YAAa,aAAejJ,KAAKqH,OAAOI,KAAO,IAAMzH,KAAKqH,OAAOC,IAAM,MAG1ThB,EAAwBjD,UAAUmH,YAAc,SAASrC,EAAGE,GAC1D,MAAOrI,MAAKwJ,KAAOxG,EAAAuC,EAAGyD,IAAIQ,OAAOrB,EAAE,SAAS3G,GAC1C,MAAO2G,GAAE3G,EAAEzB,QACV0K,GAAGzK,KAAKyI,QAAQiC,GAAG,SAASlJ,GAE7B,MADAA,GAAEe,QAAUf,EAAEe,SAAWf,EAAEP,WAAaO,EAAEN,UACnCmH,EAAE7G,EAAEe,WACVoI,YAAY,UAGjBrE,EAAwBjD,UAAUuH,aAAe,WAC/C,MAAO5K,MAAKyJ,MAAQzG,EAAAuC,EAAGyD,IAAIS,QAAQtB,EAAEnI,KAAKmI,GAAG0C,GAAG,WAAY7K,KAAKuJ,iBAGnEjD,EAAwBjD,UAAUyH,UAAY,SAAStL,GACrD,MAAOQ,MAAKgJ,IAAI3E,OAAO,QAAQ0G,MAAMvL,GAAMyJ,KAAK,QAAS,QAAQA,KAAK,IAAKjJ,KAAKwJ,OAGlFlD,EAAwBjD,UAAU2H,UAAY,WAC5C,MAAOhL,MAAKgJ,IAAI3E,OAAO,KAAK4E,KAAK,QAAS,aAAajK,KAAKgB,KAAKyJ,OAAOwB,UAAU,QAAQhC,KAAK,SAAUjJ,KAAKyI,SAGhHnC,EAAwBjD,UAAUkG,eAAiB,WAEjD,MADAlD,GAAkBsB,aAAa3H,KAAKyJ,MAAMyB,QAAUlL,KAAK0J,aAAe1J,KAAKyJ,MAAM1B,UAC5EjF,EAAE,iBAAiBqI,QAAQ,WAGpC7E,EAAwBjD,UAAUS,KAAO,WAavC,MAZA9D,MAAK2J,cAAc3J,KAAKR,MACxBQ,KAAKuI,eACLvI,KAAKkK,cACL7D,EAAkB4B,YAAYjI,KAAKR,MACnCQ,KAAK0J,aAAe1J,KAAKkF,SACzBlF,KAAKsI,aACLtI,KAAKwK,YAAYxK,KAAKmI,EAAGnI,KAAKqI,GAC9BrI,KAAKsK,aACLtK,KAAK4K,eACL5K,KAAK8K,UAAU9K,KAAKR,MACpBQ,KAAK+I,cACL/I,KAAKmJ,cACEnJ,KAAKgL,aAGd1E,EAAwBjD,UAAU2B,OAAS,WAMzC,MALAhF,MAAK2J,cAAc3J,KAAKR,MACxB6G,EAAkBuB,aAAa5H,KAAKR,MACpCQ,KAAK4H,eACL5H,KAAKgJ,IAAIuB,OAAO,QAAQQ,MAAM/K,KAAKR,MACnCQ,KAAKgJ,IAAIuB,OAAO,QAAQtB,KAAK,IAAKjJ,KAAKwJ,MAChCxJ,KAAKgJ,IAAIuB,OAAO,WAAWvL,KAAKgB,KAAKoJ,SAGvC9C,GACND,GAEUE,EAA2B,SAAS8C,GAG/C,QAAS9C,GAAwB+C,GAC/BtJ,KAAKR,KAAO8J,EAERxG,EAAEoD,QAAQsC,QAAU,IACtBxI,KAAKwI,MAAQ1F,EAAE,YAAY0F,QAAU,GAErCxI,KAAKwI,MAAS1F,EAAE,YAAY0F,QAAU,EAAK,IAE7CxI,KAAKyI,OAAS,IACdzI,KAAKmI,EAAI,KACTnI,KAAKqI,EAAI,KACTrI,KAAKkJ,OAAS,KACdlJ,KAAKoJ,OAAS,KACdpJ,KAAKwJ,KAAO,KACZxJ,KAAKgJ,IAAM,KACXhJ,KAAK2E,UAAY,KAwDnB,MAzEAkC,GAAON,EAAyB8C,GAoBhC9C,EAAwBlD,UAAUkF,aAAe,WAC/C,MAAOhC,GAAwBY,UAAUoB,aAAavJ,KAAKgB,KAAMA,KAAKwI,MAAOxI,KAAKyI,SAGpFlC,EAAwBlD,UAAU6G,YAAc,WAE9C,MADAlK,MAAKkJ,OAASlG,EAAAuC,EAAGyD,IAAImB,OAAOzB,MAAM1I,KAAKmI,GAAGiC,OAAO,UAAUC,MAAM,GAC1DrK,KAAKoJ,OAASpG,EAAAuC,EAAGyD,IAAImB,OAAOzB,MAAM1I,KAAKqI,GAAG+B,OAAO,QAAQC,MAAM,IAGxE9D,EAAwBlD,UAAUmH,YAAc,SAASrC,EAAGE,GAC1D,MAAOrI,MAAKwJ,KAAOxG,EAAAuC,EAAGyD,IAAIQ,OAAOrB,EAAE,SAAS3G,GAC1C,GAAIuI,EAEJ,OADAA,GAAY/G,EAAAuC,EAAGC,KAAKC,OAAO,YAAYuE,MAChC7B,EAAE4B,EAAUvI,MAClBiJ,GAAGzK,KAAKyI,QAAQiC,GAAI,SAAS3I,GAC9B,MAAO,UAASP,GACd,MACS6G,GADY,MAAjBtG,EAAMvC,KAAKgC,GACJO,EAAMvC,KAAKgC,GAEX,KAGZxB,OAAO2K,YAAY,UAGxBpE,EAAwBlD,UAAUiH,WAAa,WAE7C,MADAtK,MAAK2E,UAAY3B,EAAAuC,EAAG0F,UAAU,WAAW,GAAGG,MACrCpL,KAAKgJ,IAAMhG,EAAAuC,EAAGgF,OAAOvK,KAAK2E,WAAWN,OAAO,OAAO4E,KAAK,QAASjJ,KAAKwI,MAAQxI,KAAKqH,OAAOI,KAAOzH,KAAKqH,OAAOE,OAAO0B,KAAK,SAAUjJ,KAAKyI,OAASzI,KAAKqH,OAAOC,IAAMtH,KAAKqH,OAAOG,QAAQyB,KAAK,QAAS,SAAS5E,OAAO,KAAK4E,KAAK,YAAa,aAAejJ,KAAKqH,OAAOI,KAAO,IAAMzH,KAAKqH,OAAOC,IAAM,MAG/Sf,EAAwBlD,UAAUyH,UAAY,SAAStL,GACrD,MAAOQ,MAAKgJ,IAAI3E,OAAO,QAAQ0G,MAAMvL,GAAMyJ,KAAK,QAAS,oBAAoBA,KAAK,IAAKjJ,KAAKwJ,OAG9FjD,EAAwBlD,UAAUS,KAAO,WAQvC,MAPA9D,MAAKuI,eACLvI,KAAKkK,cACLlK,KAAKsI,aACLtI,KAAKwK,YAAYxK,KAAKmI,EAAGnI,KAAKqI,GAC9BrI,KAAKsK,aACLtK,KAAK8K,UAAU9K,KAAKoC,OACpBpC,KAAK+I,cACE/I,KAAKmJ,eAGd5C,EAAwBlD,UAAU2B,OAAS,WAKzC,MAJAhF,MAAKsI,aACLtI,KAAKgJ,IAAIuB,OAAO,QAAQQ,MAAM/K,KAAKoC,OACnCpC,KAAKgJ,IAAIuB,OAAO,QAAQtB,KAAK,IAAKjJ,KAAKwJ,MACvCxJ,KAAKgJ,IAAIuB,OAAO,WAAWvL,KAAKgB,KAAKkJ,QAC9BlJ,KAAKgJ,IAAIuB,OAAO,WAAWvL,KAAKgB,KAAKoJ,SAGvC7C,GACNF,KLwT0BrH,KAAKE,EAAqBC,EAAoB,UAIrEkM,KACA,SAAUxM,EAAQC,EAASK,GM5kBjC,GAAAmM;;;;;;;;;CAWA,WAEA,YAGA,IAAAC,GAAAvL,KACAwL,EAAAD,EAAApF,MAGAA,EAAA,SAAAsF,GAEAzL,KAAA0L,OAAAD,EAAAC,OAEA1L,KAAA2L,IAAAF,CAGA,IAAAG,GAAA,SAAAC,EAAAC,GAEA,MAAAD,GAAA,SAAAC,GAEAD,EAAA,SAAAC,GAIAC,SAAAC,YAAAC,iBAAAJ,GAAAK,iBAAAJ,IAIAtD,EAAAxI,KAAAwI,MAAAoD,EAAAH,EAAAC,OAAA,SACAjD,EAAAzI,KAAAyI,OAAAmD,EAAAH,EAAAC,OAAA,SAGAD,GAAAC,OAAAlD,QACAiD,EAAAC,OAAAjD,QAEA,IAAAD,GAAAxI,KAAAwI,MAAAiD,EAAAC,OAAAlD,MACAC,EAAAzI,KAAAyI,OAAAgD,EAAAC,OAAAjD,MAKA,OAJAzI,MAAAmM,YAAAnM,KAAAwI,MAAAxI,KAAAyI,OAEA2D,EAAAC,YAAArM,MAEAA,KAGAmG,GAAAmG,UACAC,QAEAC,WAAA,EAGAC,eAAA,GAGAC,gBAAA,eAGAC,WAAA,EAGAC,eAAA,EAIAC,WAAA,KAEAC,eAAA,KAEAC,gBAAA,KAGAC,eAAA,iBAGAC,eAAA,EAGAC,iBAAA,EAGAC,WAAA,aAGAC,mBAAA,EAGAC,kBAAA,EAGAC,gBAAA,qDAGAC,cAAA,GAGAC,eAAA,SAGAC,eAAA,OAGAC,YAAA,EAGAC,qBAAA,EAGAC,cAAA,EAGAC,gBAAA,EAGAC,eAAA,iDAGAC,iBAAA,kBAGAC,kBAAA,qDAGAC,gBAAA,GAGAC,iBAAA,SAGAC,iBAAA,OAGAC,uBAAA,qDAGAC,qBAAA,GAGAC,sBAAA,OAGAC,sBAAA,OAGAC,gBAAA,EAGAC,gBAAA,EAGAC,iBAAA,EAGAC,oBAAA,EAGAC,eAAA,GAGAC,gBAAA,+CAGAC,qBAAA,eAGAC,0BAAA,OAGAC,oBAAA,aAGAC,oBAAA,eAMA9I,EAAA+I,QAGA,IAAA9C,GAAAjG,EAAAiG,WAGA3K,EAAA2K,EAAA3K,KAAA,SAAA0N,EAAAC,EAAAC,GACA,GAAAC,GAAAC,MAAAlM,UAAAY,MAAAjF,KAAA4H,UAAA,EAEA,IAAAuI,EACA,GAAAA,EAAArP,UAAAqP,EAAArP,OAAA,CACA,GAAAJ,EACA,KAAAA,EAAA,EAAcA,EAAAyP,EAAArP,OAAmBJ,IACjC0P,EAAAzI,MAAA0I,GAAAF,EAAAzP,MAAA8P,OAAAF,QAIA,QAAAG,KAAAN,GACAC,EAAAzI,MAAA0I,GAAAF,EAAAM,MAAAD,OAAAF,KAKAI,EAAAtD,EAAAsD,MAAA,SAAAC,GACA,GAAAC,KAIA,OAHAnO,GAAAkO,EAAA,SAAA3O,EAAAyB,GACAkN,EAAAvI,eAAA3E,KAAAmN,EAAAnN,GAAAzB,KAEA4O,GAEA/I,EAAAuF,EAAAvF,OAAA,SAAAgJ,GAMA,MALApO,GAAA8N,MAAAlM,UAAAY,MAAAjF,KAAA4H,UAAA,YAAAkJ,GACArO,EAAAqO,EAAA,SAAA9O,EAAAyB,GACAqN,EAAA1I,eAAA3E,KAAAoN,EAAApN,GAAAzB,OAGA6O,GAEAE,EAAA3D,EAAA2D,MAAA,SAAAF,EAAAG,GAEA,GAAAC,GAAAV,MAAAlM,UAAAY,MAAAjF,KAAA4H,UAAA,EAEA,OADAqJ,GAAAC,YACArJ,EAAAF,MAAA,KAAAsJ,IAEAE,EAAA/D,EAAA+D,QAAA,SAAAC,EAAAX,GACA,GAAAF,MAAAlM,UAAA8M,QACA,MAAAC,GAAAD,QAAAV,EAGA,QAAA/P,GAAA,EAAmBA,EAAA0Q,EAAAtQ,OAA0BJ,IAC7C,GAAA0Q,EAAA1Q,KAAA+P,EAAA,MAAA/P,EAEA,WAsCA2Q,GAnCAjE,EAAAkE,MAAA,SAAA7P,EAAA8P,GACA,GAAAC,KAQA,OANApE,GAAA3K,KAAAhB,EAAA,SAAAgP,GACAc,EAAAd,IACAe,EAAA9O,KAAA+N,KAIAe,GAEApE,EAAAqE,cAAA,SAAAL,EAAAG,EAAAG,GAEAA,IACAA,GAAA,EAEA,QAAAhR,GAAAgR,EAAA,EAA+BhR,EAAA0Q,EAAAtQ,OAA0BJ,IAAA,CACzD,GAAAiR,GAAAP,EAAA1Q,EACA,IAAA6Q,EAAAI,GACA,MAAAA,KAIAvE,EAAAwE,kBAAA,SAAAR,EAAAG,EAAAG,GAEAA,IACAA,EAAAN,EAAAtQ,OAEA,QAAAJ,GAAAgR,EAAA,EAA+BhR,GAAA,EAAQA,IAAA,CACvC,GAAAiR,GAAAP,EAAA1Q,EACA,IAAA6Q,EAAAI,GACA,MAAAA,KAIAvE,EAAAiE,SAAA,SAAAQ,GAEA,GAAA9J,GAAA/G,KACA8Q,EAAAD,KAAAzJ,eAAA,eAAAyJ,EAAA5J,YAAA,WAAqH,MAAAF,GAAAJ,MAAA3G,KAAA4G,YAErHmK,EAAA,WAA8B/Q,KAAAiH,YAAA6J,EAU9B,OATAC,GAAA1N,UAAA0D,EAAA1D,UACAyN,EAAAzN,UAAA,GAAA0N,GAEAD,EAAAjK,OAAAwJ,EAEAQ,GAAAhK,EAAAiK,EAAAzN,UAAAwN,GAEAC,EAAA3J,UAAAJ,EAAA1D,UAEAyN,IAEAE,EAAA5E,EAAA4E,KAAA,aACAC,EAAA7E,EAAA6E,IAAA,WACA,GAAAC,GAAA,CACA,mBACA,eAAAA,QAGAC,EAAA/E,EAAA+E,KAAA,SAAAC,GAEAlL,OAAAmL,SAAA,kBAAAnL,QAAAmL,QAAAF,MAAAE,QAAAF,KAAAC,IAEAE,EAAAlF,EAAAkF,IAAAnS,EAAA,QAEAoS,EAAAnF,EAAAmF,SAAA,SAAAtO,GACA,OAAAuO,MAAAC,WAAAxO,KAAAyO,SAAAzO,IAEA4E,EAAAuE,EAAAvE,IAAA,SAAA8J,GACA,MAAAC,MAAA/J,IAAAlB,MAAAiL,KAAAD,IAEAE,EAAAzF,EAAAyF,IAAA,SAAAF,GACA,MAAAC,MAAAC,IAAAlL,MAAAiL,KAAAD,IAeAG,GAbA1F,EAAA2F,IAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAX,EAAAU,IACA,GAAAD,EAAAC,EACA,MAAAA,OAGA,IAAAV,EAAAW,IACAF,EAAAE,EACA,MAAAA,EAGA,OAAAF,IAEA5F,EAAA0F,iBAAA,SAAAK,GACA,MAAAA,GAAA,MAAAZ,EAAAY,GACAA,EAAAC,WAAAC,MAAA,QAAAvS,OAGA,IAGAwS,EAAAlG,EAAAmG,QAAA,SAAAC,GACA,MAAAA,IAAAZ,KAAAa,GAAA,MAqBAC,GAlBAtG,EAAAuG,kBAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAA1K,EAAAyK,EAAAzK,EACA4K,EAAAF,EAAAxK,EAAAuK,EAAAvK,EACA2K,EAAApB,KAAAqB,KAAAH,IAAAC,KAGAG,EAAA,EAAAtB,KAAAa,GAAAb,KAAAuB,MAAAJ,EAAAD,EAOA,OAJAA,GAAA,GAAAC,EAAA,IACAG,GAAA,EAAAtB,KAAAa,KAIAS,QACAE,SAAAJ,IAGA5G,EAAAsG,WAAA,SAAAW,GACA,MAAAA,GAAA,YAoBAC,GAlBAlH,EAAAmH,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAGA,GAAAC,GAAAhC,KAAAqB,KAAArB,KAAAiC,IAAAJ,EAAAtL,EAAAqL,EAAArL,EAAA,GAAAyJ,KAAAiC,IAAAJ,EAAApL,EAAAmL,EAAAnL,EAAA,IACAyL,EAAAlC,KAAAqB,KAAArB,KAAAiC,IAAAH,EAAAvL,EAAAsL,EAAAtL,EAAA,GAAAyJ,KAAAiC,IAAAH,EAAArL,EAAAoL,EAAApL,EAAA,IACA0L,EAAAJ,EAAAC,KAAAE,GACAE,EAAAL,EAAAG,GAAAF,EAAAE,EACA,QACAG,OACA9L,EAAAsL,EAAAtL,EAAA4L,GAAAL,EAAAvL,EAAAqL,EAAArL,GACAE,EAAAoL,EAAApL,EAAA0L,GAAAL,EAAArL,EAAAmL,EAAAnL,IAEA6L,OACA/L,EAAAsL,EAAAtL,EAAA6L,GAAAN,EAAAvL,EAAAqL,EAAArL,GACAE,EAAAoL,EAAApL,EAAA2L,GAAAN,EAAArL,EAAAmL,EAAAnL,MAIA+D,EAAAkH,0BAAA,SAAAa,GACA,MAAAvC,MAAAwC,MAAAxC,KAAAvS,IAAA8U,GAAAvC,KAAAyC,QAoFAC,GAlFAlI,EAAAmI,oBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,GACAC,GAAAjD,KAAAwC,MAAAK,GAAA,IAAAC,IACAI,EAFA,GAEAD,EAEA5C,EAAApK,EAAA2M,GACAtC,EAAAL,EAAA2C,EAIAvC,KAAAC,IACAD,GAAA,GAEAC,GAAA,KAAAyC,EACAzC,GAAA,GAIAD,GAAA,GAaA,KATA,GAAA8C,GAAAnD,KAAAoD,IAAA/C,EAAAC,GACA+C,EAAA3B,EAAAyB,GACAG,EAAAtD,KAAAuD,KAAAlD,GAAA,EAAAL,KAAAiC,IAAA,GAAAoB,KAAArD,KAAAiC,IAAA,GAAAoB,GACAG,EAAA,IAAAxD,KAAAwC,MAAAlC,GAAA,EAAAN,KAAAiC,IAAA,GAAAoB,KAAArD,KAAAiC,IAAA,GAAAoB,GACAI,EAAAH,EAAAE,EACAE,EAAA1D,KAAAiC,IAAA,GAAAoB,GACAM,EAAA3D,KAAA4D,MAAAH,EAAAC,IAGAC,EAAAV,GAAA,EAAAU,EAAAV,KAAAC,GACA,GAAAS,EAAAV,EACAS,GAAA,GACAC,EAAA3D,KAAA4D,MAAAH,EAAAC,IAEA,OACAR,GAAA,OAMA,IAAAF,GAAAK,GAAA,GAEA,GAAAK,EAAA,OAMA,KALAA,IAAA,EACAC,EAAA3D,KAAA4D,MAAAH,EAAAC,OASAA,IAAA,EACAC,EAAA3D,KAAA4D,MAAAH,EAAAC,EAWA,OALAR,KACAS,EA/DA,EAgEAD,EAAAD,EAAAE,IAIAE,MAAAF,EACAD,YACAzD,IAAAuD,EACAvN,IAAAuN,EAAAG,EAAAD,IAQAlJ,EAAAkI,SAAA,SAAAoB,EAAAC,GAIA,GAAAD,YAAAE,UACA,MAAAF,GAAAC,EAGA,IAAAE,KA8BA,OA7BA,UAAAzE,EAAA5R,GAGA,GAAAiH,GAAA,KAAAqP,KAAA1E,GAKA,GAAAwE,UAAA,MACA,2EAMAxE,EACA2E,QAAA,iBACA1D,MAAA,MAAA2D,KAAA,MACAD,QAAA,2BACAA,QAAA,wBACA1D,MAAA,MAAA2D,KAAA,OACA3D,MAAA,MAAA2D,KAAA,YACA3D,MAAA,MAAA2D,KAAA,OACA,0BAnBAH,EAAAzE,GAAAyE,EAAAzE,EAuBA,OAAA5R,GAAAiH,EAAAjH,GAAAiH,GAEAiP,EAAAC,KAeAM,GAZA7J,EAAA8J,eAAA,SAAAR,EAAAH,EAAAH,EAAAE,GACA,GAAAa,GAAA,GAAA5G,OAAAgG,EAMA,OALAa,sBACA3U,EAAA0U,EAAA,SAAAhC,EAAAkC,GACAF,EAAAE,GAAA/B,EAAAoB,GAAmD1U,MAAAoU,EAAAE,GAAAe,EAAA,OAGnDF,GAKA/J,EAAA6J,eACApN,OAAA,SAAA8K,GACA,MAAAA,IAEA2C,WAAA,SAAA3C,GACA,MAAAA,MAEA4C,YAAA,SAAA5C,GACA,SAAAA,KAAA,IAEA6C,cAAA,SAAA7C,GACA,OAAAA,GAAA,SAAAA,KACA,MAAAA,KAAA,OAEA8C,YAAA,SAAA9C,GACA,MAAAA,QAEA+C,aAAA,SAAA/C,GACA,WAAAA,IAAA,KAAAA,IAAA,IAEAgD,eAAA,SAAAhD,GACA,OAAAA,GAAA,SAAAA,MACA,KAAAA,GAAA,GAAAA,IAAA,IAEAiD,YAAA,SAAAjD,GACA,MAAAA,UAEAkD,aAAA,SAAAlD,GACA,WAAAA,IAAA,KAAAA,MAAA,IAEAmD,eAAA,SAAAnD,GACA,OAAAA,GAAA,SAAAA,SACA,KAAAA,GAAA,GAAAA,MAAA,IAEAoD,YAAA,SAAApD,GACA,UAAAA,GAAA,GAAAA,SAEAqD,aAAA,SAAArD,GACA,WAAAA,IAAA,KAAAA,QAAA,IAEAsD,eAAA,SAAAtD,GACA,OAAAA,GAAA,SAAAA,UACA,KAAAA,GAAA,GAAAA,QAAA,IAEAuD,WAAA,SAAAvD,GACA,SAAA/B,KAAAuF,IAAAxD,EAAA,GAAA/B,KAAAa,GAAA,OAEA2E,YAAA,SAAAzD,GACA,SAAA/B,KAAAyF,IAAA1D,EAAA,GAAA/B,KAAAa,GAAA,KAEA6E,cAAA,SAAA3D,GACA,WAAA/B,KAAAuF,IAAAvF,KAAAa,GAAAkB,EAAA,OAEA4D,WAAA,SAAA5D,GACA,WAAAA,EAAA,IAAA/B,KAAAiC,IAAA,MAAAF,EAAA,OAEA6D,YAAA,SAAA7D,GACA,WAAAA,EAAA,OAAA/B,KAAAiC,IAAA,MAAAF,EAAA,KAEA8D,cAAA,SAAA9D,GACA,WAAAA,EAAA,EACA,IAAAA,EAAA,GACAA,GAAA,SAAA/B,KAAAiC,IAAA,MAAAF,EAAA,IACA,MAAA/B,KAAAiC,IAAA,QAAAF,KAEA+D,WAAA,SAAA/D,GACA,MAAAA,IAAA,EAAAA,GACA,GAAA/B,KAAAqB,KAAA,GAAAU,GAAA,GAAAA,GAAA,IAEAgE,YAAA,SAAAhE,GACA,SAAA/B,KAAAqB,KAAA,GAAAU,IAAA,KAAAA,IAEAiE,cAAA,SAAAjE,GACA,OAAAA,GAAA,WAAA/B,KAAAqB,KAAA,EAAAU,KAAA,GACA,IAAA/B,KAAAqB,KAAA,GAAAU,GAAA,GAAAA,GAAA,IAEAkE,cAAA,SAAAlE,GACA,GAAAmE,GAAA,QACAC,EAAA,EACAxS,EAAA,CACA,YAAAoO,EAAA,EACA,IAAAA,GAAA,MACAoE,MAAA,IACAxS,EAAAqM,KAAAoD,IAAA,IACAzP,EAAA,EACAuS,EAAAC,EAAA,GACKD,EAAAC,GAAA,EAAAnG,KAAAa,IAAAb,KAAAoG,KAAA,EAAAzS,KACLA,EAAAqM,KAAAiC,IAAA,MAAAF,GAAA,KAAA/B,KAAAyF,KAAA,EAAA1D,EAAAmE,IAAA,EAAAlG,KAAAa,IAAAsF,KAEAE,eAAA,SAAAtE,GACA,GAAAmE,GAAA,QACAC,EAAA,EACAxS,EAAA,CACA,YAAAoO,EAAA,EACA,IAAAA,GAAA,MACAoE,MAAA,IACAxS,EAAAqM,KAAAoD,IAAA,IACAzP,EAAA,EACAuS,EAAAC,EAAA,GACKD,EAAAC,GAAA,EAAAnG,KAAAa,IAAAb,KAAAoG,KAAA,EAAAzS,GACLA,EAAAqM,KAAAiC,IAAA,MAAAF,GAAA/B,KAAAyF,KAAA,EAAA1D,EAAAmE,IAAA,EAAAlG,KAAAa,IAAAsF,GAAA,IAEAG,iBAAA,SAAAvE,GACA,GAAAmE,GAAA,QACAC,EAAA,EACAxS,EAAA,CACA,YAAAoO,EAAA,EACA,IAAAA,GAAA,OACAoE,MAAA,UACAxS,EAAAqM,KAAAoD,IAAA,IACAzP,EAAA,EACAuS,EAAAC,EAAA,GACKD,EAAAC,GAAA,EAAAnG,KAAAa,IAAAb,KAAAoG,KAAA,EAAAzS,GACLoO,EAAA,EAAApO,EAAAqM,KAAAiC,IAAA,MAAAF,GAAA,IAAA/B,KAAAyF,KAAA,EAAA1D,EAAAmE,IAAA,EAAAlG,KAAAa,IAAAsF,IAAA,GACAxS,EAAAqM,KAAAiC,IAAA,OAAAF,GAAA,IAAA/B,KAAAyF,KAAA,EAAA1D,EAAAmE,IAAA,EAAAlG,KAAAa,IAAAsF,GAAA,OAEAI,WAAA,SAAAxE,GACA,GAAAmE,GAAA,OACA,WAAAnE,GAAA,GAAAA,IAAAmE,EAAA,GAAAnE,EAAAmE,IAEAM,YAAA,SAAAzE,GACA,GAAAmE,GAAA,OACA,YAAAnE,IAAA,KAAAA,IAAAmE,EAAA,GAAAnE,EAAAmE,GAAA,IAEAO,cAAA,SAAA1E,GACA,GAAAmE,GAAA,OACA,QAAAnE,GAAA,MAAAA,MAAA,GAAAmE,GAAA,QAAAnE,EAAAmE,GAAA,GACA,KAAAnE,GAAA,GAAAA,IAAA,GAAAmE,GAAA,QAAAnE,EAAAmE,GAAA,IAEAQ,aAAA,SAAA3E,GACA,SAAAsC,EAAAsC,cAAA,EAAA5E,IAEA4E,cAAA,SAAA5E,GACA,OAAAA,GAAA,UACA,OAAAA,IAAA,EACKA,EAAA,OACL,WAAAA,GAAA,UAAAA,EAAA,KACKA,EAAA,SACL,WAAAA,GAAA,WAAAA,EAAA,OAEA,WAAAA,GAAA,YAAAA,EAAA,UAGA6E,gBAAA,SAAA7E,GACA,MAAAA,GAAA,MAAAsC,EAAAqC,aAAA,EAAA3E,GACA,GAAAsC,EAAAsC,cAAA,EAAA5E,EAAA,SAIA8E,EAAArM,EAAAqM,iBAAA,WACA,MAAAvS,QAAAwS,uBACAxS,OAAAyS,6BACAzS,OAAA0S,0BACA1S,OAAA2S,wBACA3S,OAAA4S,yBACA,SAAA1J,GACA,MAAAlJ,QAAA6S,WAAA3J,EAAA,YAGA4J,EAAA5M,EAAA4M,gBAAA,WACA,MAAA9S,QAAA+S,sBACA/S,OAAAgT,4BACAhT,OAAAiT,yBACAjT,OAAAkT,uBACAlT,OAAAmT,wBACA,SAAAjK,GACA,MAAAlJ,QAAAoT,aAAAlK,EAAA,YA8CAmK,GA3CAnN,EAAAoN,cAAA,SAAApK,EAAAqK,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAA,EACAC,EAAA9D,EAAAyD,IAAAzD,EAAApN,OAEAmR,EAAA,WACAF,GACA,IAAAG,GAAAH,EAAAL,EACAS,EAAAH,EAAAE,EAEA7K,GAAApQ,KAAA6a,EAAAK,EAAAD,EAAAH,GACAH,EAAA3a,KAAA6a,EAAAK,EAAAD,GACAH,EAAAL,EACAI,EAAAG,eAAAvB,EAAAuB,GAEAJ,EAAAjT,MAAAkT,GAGApB,GAAAuB,IAGA5N,EAAA+N,oBAAA,SAAAC,GACA,GAAAC,GAAAC,EACAC,EAAAH,EAAAI,eAAAJ,EACA1O,EAAA0O,EAAAK,eAAAL,EAAAM,WACAC,EAAAjP,EAAAkP,uBAYA,OAVAL,GAAAM,SACAR,EAAAE,EAAAM,QAAA,GAAAC,QAAAH,EAAAlT,KACA6S,EAAAC,EAAAM,QAAA,GAAAE,QAAAJ,EAAArT,MAIA+S,EAAAE,EAAAO,QAAAH,EAAAlT,KACA6S,EAAAC,EAAAQ,QAAAJ,EAAArT,MAIAa,EAAAkS,EACAhS,EAAAiS,IAIAlO,EAAAmN,SAAA,SAAAyB,EAAAC,EAAAC,GACAF,EAAAG,iBACAH,EAAAG,iBAAAF,EAAAC,GACIF,EAAAI,YACJJ,EAAAI,YAAA,KAAAH,EAAAC,GAEAF,EAAA,KAAAC,GAAAC,IAGAG,EAAAjP,EAAAiP,YAAA,SAAAL,EAAAC,EAAAK,GACAN,EAAAO,oBACAP,EAAAO,oBAAAN,EAAAK,GAAA,GACIN,EAAAQ,YACJR,EAAAQ,YAAA,KAAAP,EAAAK,GAEAN,EAAA,KAAAC,GAAAjK,GAcAyK,GAXArP,EAAAsP,WAAA,SAAA7B,EAAA8B,EAAAL,GAEAzB,EAAA+B,SAAA/B,EAAA+B,WAEAna,EAAAka,EAAA,SAAAE,GACAhC,EAAA+B,OAAAC,GAAA,WACAP,EAAA3U,MAAAkT,EAAAjT,YAEA2S,EAAAM,EAAAiC,MAAApQ,OAAAmQ,EAAAhC,EAAA+B,OAAAC,OAGAzP,EAAAqP,aAAA,SAAA5B,EAAA8B,GACAla,EAAAka,EAAA,SAAAL,EAAAO,GACAR,EAAAxB,EAAAiC,MAAApQ,OAAAmQ,EAAAP,OAGAS,EAAA3P,EAAA2P,gBAAA,SAAAC,GAGA,MAFAA,GAAAC,WAEAC,aAEAC,EAAA/P,EAAA+P,iBAAA,SAAAH,GAGA,MAFAA,GAAAC,WAEAG,cAGA/P,GADAD,EAAAiQ,eAAAjQ,EAAA2P,gBACA3P,EAAAC,YAAA,SAAAyP,GACA,GAAAnQ,GAAAmQ,EAAAnQ,IACAnD,EAAAsT,EAAApQ,OAAAlD,MACAC,EAAAqT,EAAApQ,OAAAjD,MAEAvC,QAAAoW,mBACA3Q,EAAAD,OAAA9G,MAAA4D,QAAA,KACAmD,EAAAD,OAAA9G,MAAA6D,SAAA,KACAkD,EAAAD,OAAAjD,SAAAvC,OAAAoW,iBACA3Q,EAAAD,OAAAlD,QAAAtC,OAAAoW,iBACA3Q,EAAAjD,MAAAxC,OAAAoW,iBAAApW,OAAAoW,qBAIAC,EAAAnQ,EAAAmQ,MAAA,SAAAT,GACAA,EAAAnQ,IAAA6Q,UAAA,IAAAV,EAAAtT,MAAAsT,EAAArT,SAEAgU,EAAArQ,EAAAqQ,WAAA,SAAAC,EAAAC,EAAAC,GACA,MAAAD,GAAA,IAAAD,EAAA,MAAAE,GAEAC,EAAAzQ,EAAAyQ,YAAA,SAAAlR,EAAAmR,EAAAC,GACApR,EAAAmR,MACA,IAAAE,GAAA,CAKA,OAJAvb,GAAAsb,EAAA,SAAAE,GACA,GAAAC,GAAAvR,EAAAwR,YAAAF,GAAAzU,KACAwU,GAAAE,EAAAF,EAAAE,EAAAF,IAEAA,GAEAI,EAAAhR,EAAAgR,qBAAA,SAAAzR,EAAAxD,EAAAE,EAAAG,EAAAC,EAAA4U,GACA1R,EAAA2R,YACA3R,EAAA4R,OAAApV,EAAAkV,EAAAhV,GACAsD,EAAA6R,OAAArV,EAAAK,EAAA6U,EAAAhV,GACAsD,EAAA8R,iBAAAtV,EAAAK,EAAAH,EAAAF,EAAAK,EAAAH,EAAAgV,GACA1R,EAAA6R,OAAArV,EAAAK,EAAAH,EAAAI,EAAA4U,GACA1R,EAAA8R,iBAAAtV,EAAAK,EAAAH,EAAAI,EAAAN,EAAAK,EAAA6U,EAAAhV,EAAAI,GACAkD,EAAA6R,OAAArV,EAAAkV,EAAAhV,EAAAI,GACAkD,EAAA8R,iBAAAtV,EAAAE,EAAAI,EAAAN,EAAAE,EAAAI,EAAA4U,GACA1R,EAAA6R,OAAArV,EAAAE,EAAAgV,GACA1R,EAAA8R,iBAAAtV,EAAAE,EAAAF,EAAAkV,EAAAhV,GACAsD,EAAA+R,YAMAvX,GAAAwX,aAEAxX,EAAAyX,KAAA,SAAApe,EAAAqe,EAAA/B,GACA9b,KAAA6d,UACA7d,KAAA8b,QACA9b,KAAAkR,GAAAD,IAEA9K,EAAAwX,UAAA3d,KAAAkR,IAAAlR,KAIA6d,EAAAnQ,YACA1N,KAAA8d,SAEA9d,KAAA+d,WAAA/e,KAAAgB,KAAAR,IAIAqH,EAAAV,EAAAyX,KAAAva,WACA0a,WAAA,WAA0B,MAAA/d,OAC1Buc,MAAA,WAEA,MADAA,GAAAvc,KAAA8b,OACA9b,MAEAge,KAAA,WAGA,MADAhF,GAAAhZ,KAAAga,gBACAha,MAEA8d,OAAA,SAAA1O,GACApP,KAAAge,MACA,IAAAtS,GAAA1L,KAAA8b,MAAApQ,OACAuS,EAAAlC,EAAA/b,KAAA8b,MAAApQ,QACAwS,EAAAle,KAAA6d,QAAAlQ,oBAAAsQ,EAAAje,KAAA8b,MAAA3P,YAAAgQ,EAAAnc,KAAA8b,MAAApQ,OAUA,OARAA,GAAAlD,MAAAxI,KAAA8b,MAAAtT,MAAAyV,EACAvS,EAAAjD,OAAAzI,KAAA8b,MAAArT,OAAAyV,EAEA7R,EAAArM,KAAA8b,OAEA,kBAAA1M,IACAA,EAAAzI,MAAA3G,KAAAuP,MAAAlM,UAAAY,MAAAjF,KAAA4H,UAAA,IAEA5G,MAEAme,OAAAnN,EACAoN,OAAA,SAAAD,GAkBA,MAjBAA,IACAne,KAAAme,SAEAne,KAAA6d,QAAArR,YAAA2R,EACA/R,EAAAoN,cACAxZ,KAAA8D,KACA9D,KAAA6d,QAAApR,eACAzM,KAAA6d,QAAAnR,gBACA1M,KAAA6d,QAAA7O,oBACAhP,KAAA6d,QAAA5O,oBACAjP,OAIAA,KAAA8D,OACA9D,KAAA6d,QAAA5O,oBAAAjQ,KAAAgB,OAEAA,MAEAqe,eAAA,WACA,MAAA/J,GAAAtU,KAAA6d,QAAAS,eAAAte,OAEAue,QAAA,WACAve,KAAAuc,QACAd,EAAAzb,UAAA4b,OACA,IAAAlQ,GAAA1L,KAAA8b,MAAApQ,MAGAA,GAAAlD,MAAAxI,KAAA8b,MAAAtT,MACAkD,EAAAjD,OAAAzI,KAAA8b,MAAArT,OAGAiD,EAAA9G,MAAA4Z,gBACA9S,EAAA9G,MAAA4Z,eAAA,SACA9S,EAAA9G,MAAA4Z,eAAA,YAEA9S,EAAA9G,MAAA6Z,gBAAA,SACA/S,EAAA9G,MAAA6Z,gBAAA,iBAGAtY,GAAAwX,UAAA3d,KAAAkR,KAEAwN,YAAA,SAAAC,EAAAC,GAoBA,OAlBA,KAAA5e,KAAA6e,iBAAA7e,KAAA6e,mBAEA,SAAAC,GACA,GAAAC,IAAA,CAEA,OAAAD,GAAAhf,SAAAE,KAAA6e,eAAA/e,OACAif,GAAA,GAIAtd,EAAAqd,EAAA,SAAAjT,EAAAwK,GACAxK,IAAA7L,KAAA6e,eAAAxI,KACA0I,GAAA,IAEK/e,MACL+e,IACI/f,KAAAgB,KAAA2e,IAEJC,EAAA,CAUA,GANA5e,KAAA6e,eAAAF,EAEA3e,KAAA8D,OACA9D,KAAA6d,QAAAhQ,gBACA7N,KAAA6d,QAAAhQ,gBAAA,GAEA8Q,EAAA7e,OAAA,EAEA,GAAAE,KAAAgf,UAAAhf,KAAAgf,SAAAlf,OAAA,GAIA,OAHAmf,GACAC,EAEAxf,EAAAM,KAAAgf,SAAAlf,OAAA,EAA2CJ,GAAA,IAC3Cuf,EAAAjf,KAAAgf,SAAAtf,GAAAyf,QAAAnf,KAAAgf,SAAAtf,GAAA0f,MAAApf,KAAAgf,SAAAtf,GAAA2f,UAEA,KADAH,EAAA/O,EAAA8O,EAAAN,EAAA,MAFmDjf,KAOnD,GAAA4f,MACAC,KACAC,EAAA,SAAAnJ,GAGA,GACAoJ,GAGAC,EACAC,EACAC,EACAC,EAPAf,KAEAgB,KACAC,IAgCA,OA3BA3T,GAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACAP,EAAAO,EAAAb,QAAAa,EAAAZ,MAAAY,EAAAX,SACAI,EAAAP,IAAAO,EAAAP,GAAAe,YACAnB,EAAApd,KAAA+d,EAAAP,MAIA9S,EAAA3K,KAAAqd,EAAA,SAAAjT,GACAiU,EAAApe,KAAAmK,EAAA1D,GACA4X,EAAAre,KAAAmK,EAAAxD,GAIAiX,EAAA5d,KAAA0K,EAAAkI,SAAAtU,KAAA6d,QAAA/O,qBAAAjD,IACA0T,EAAA7d,MACAwe,KAAArU,EAAAsU,OAAAC,WAAAvU,EAAAuU,UACAC,OAAAxU,EAAAsU,OAAAG,aAAAzU,EAAAyU,eAGQtgB,MAER6f,EAAAhO,EAAAkO,GACAJ,EAAA9X,EAAAkY,GAEAH,EAAA/N,EAAAiO,GACAJ,EAAA7X,EAAAiY,IAGA3X,EAAAyX,EAAA5f,KAAA8b,MAAAtT,MAAA,EAAAoX,EAAAF,EACArX,GAAAwX,EAAAF,GAAA,IAEO3gB,KAAAgB,KAAAkf,EAEP,IAAA/Y,GAAAoa,cACApY,EAAAqX,EAAArX,EACAE,EAAAmX,EAAAnX,EACAmY,SAAAxgB,KAAA6d,QAAApP,gBACAgS,SAAAzgB,KAAA6d,QAAArP,gBACAkS,QAAA1gB,KAAA6d,QAAAjP,eACAwR,UAAApgB,KAAA6d,QAAA9P,iBACA4S,UAAA3gB,KAAA6d,QAAA1P,iBACAyO,WAAA5c,KAAA6d,QAAA7P,kBACA2O,UAAA3c,KAAA6d,QAAA3P,iBACA0S,SAAA5gB,KAAA6d,QAAA5P,gBACA4S,eAAA7gB,KAAA6d,QAAAtP,sBACAuS,gBAAA9gB,KAAA6d,QAAAzP,uBACA2S,eAAA/gB,KAAA6d,QAAAvP,sBACA0S,cAAAhhB,KAAA6d,QAAAxP,qBACA4S,aAAAjhB,KAAA6d,QAAAlP,oBACAuS,OAAA5B,EACA6B,aAAA5B,EACA6B,sBAAAphB,KAAA6d,QAAA9O,0BACAsS,MAAA1C,EAAA,GAAA2C,MACAxF,MAAA9b,KAAA8b,MACAnQ,IAAA3L,KAAA8b,MAAAnQ,IACA4V,OAAAvhB,KAAA6d,QAAAhQ,iBACM/J,WAGNrC,GAAAkd,EAAA,SAAA6C,GACA,GAAAC,GAAAD,EAAAC,iBACA,IAAAtb,GAAAub,SACAvZ,EAAAyJ,KAAA4D,MAAAiM,EAAAtZ,GACAE,EAAAuJ,KAAA4D,MAAAiM,EAAApZ,GACAmY,SAAAxgB,KAAA6d,QAAApP,gBACAgS,SAAAzgB,KAAA6d,QAAArP,gBACA4R,UAAApgB,KAAA6d,QAAA9P,iBACA4S,UAAA3gB,KAAA6d,QAAA1P,iBACAyO,WAAA5c,KAAA6d,QAAA7P,kBACA2O,UAAA3c,KAAA6d,QAAA3P,iBACA0S,SAAA5gB,KAAA6d,QAAA5P,gBACA0T,YAAA3hB,KAAA6d,QAAAnP,iBACAuS,aAAAjhB,KAAA6d,QAAAlP,oBACAnK,KAAA8P,EAAAtU,KAAA6d,QAAAhP,gBAAA2S,GACA1F,MAAA9b,KAAA8b,MACAyF,OAAAvhB,KAAA6d,QAAAhQ,iBACO/J,QACD9D,KAGN,OAAAA,QAEA4hB,cAAA,WACA,MAAA5hB,MAAA8b,MAAApQ,OAAAmW,UAAAlb,MAAA3G,KAAA8b,MAAApQ,OAAA9E,cAIAT,EAAAyX,KAAA/W,OAAA,SAAAgK,GAEA,GAAA9J,GAAA/G,KAEA8hB,EAAA,WACA,MAAA/a,GAAAJ,MAAA3G,KAAA4G,WAUA,IANAkb,EAAAze,UAAAqM,EAAA3I,EAAA1D,WAEAwD,EAAAib,EAAAze,UAAAwN,GAEAiR,EAAAjb,OAAAV,EAAAyX,KAAA/W,OAEAgK,EAAAkR,MAAAhb,EAAA1D,UAAA0e,KAAA,CAEA,GAAAC,GAAAnR,EAAAkR,MAAAhb,EAAA1D,UAAA0e,KAOAE,EAAA9b,EAAAmG,SAAAvF,EAAA1D,UAAA0e,MAAArS,EAAAvJ,EAAAmG,SAAAvF,EAAA1D,UAAA0e,SAEA5b,GAAAmG,SAAA0V,GAAAnb,EAAAob,EAAApR,EAAAvE,UAEAnG,EAAA+I,MAAA8S,GAAAF,EAGA3b,EAAA9C,UAAA2e,GAAA,SAAAxiB,EAAAqe,GACA,GAAAqE,GAAAnS,EAAA5J,EAAAmG,SAAAC,OAAApG,EAAAmG,SAAA0V,GAAAnE,MACA,WAAAiE,GAAAtiB,EAAA0iB,EAAAliB,WAGAmR,GAAA,iEAEA,OAAApK,IAGAZ,EAAAqb,QAAA,SAAAW,GACAtb,EAAA7G,KAAAmiB,GACAniB,KAAA+d,WAAApX,MAAA3G,KAAA4G,WACA5G,KAAAoiB,QAEAvb,EAAAV,EAAAqb,QAAAne,WACA0a,WAAA,aACAsE,QAAA,SAAAC,GAQA,MAPAA,GAGA7gB,EAAA6gB,EAAA,SAAA7f,GACAzC,KAAAyC,GAAAzC,KAAAmgB,OAAA1d,IACKzC,MAJL6G,EAAA7G,UAAAmgB,QAMAngB,MAEAoiB,KAAA,WAGA,MAFApiB,MAAAmgB,OAAAzQ,EAAA1P,YACAA,MAAAmgB,cACAngB,MAEAuiB,OAAA,SAAAC,GAKA,MAJA/gB,GAAA+gB,EAAA,SAAAxhB,EAAAyB,GACAzC,KAAAmgB,OAAA1d,GAAAzC,KAAAyC,GACAzC,KAAAyC,GAAAzB,GACIhB,MACJA,MAEAyiB,WAAA,SAAAH,EAAAI,GAIA,MAHAjhB,GAAA6gB,EAAA,SAAAthB,EAAAyB,GACAzC,KAAAyC,IAAAzB,EAAAhB,KAAAmgB,OAAA1d,IAAAigB,EAAA1iB,KAAAmgB,OAAA1d,IACIzC,MACJA,MAEAyhB,gBAAA,WACA,OACAtZ,EAAAnI,KAAAmI,EACAE,EAAArI,KAAAqI,IAGA4X,SAAA,WACA,MAAA1O,GAAAvR,KAAAgB,UAIAmF,EAAAqb,QAAA3a,OAAAwJ,EAGAlK,EAAAwc,MAAAxc,EAAAqb,QAAA3a,QACA+b,SAAA,EACAC,QAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAhjB,KAAAijB,mBAAAjjB,KAAAqd,MACA,OAAAzL,MAAAiC,IAAAiP,EAAA9iB,KAAAmI,EAAA,GAAAyJ,KAAAiC,IAAAkP,EAAA/iB,KAAAqI,EAAA,GAAAuJ,KAAAiC,IAAAmP,EAAA,IAEAlf,KAAA,WACA,GAAA9D,KAAA4iB,QAAA,CACA,GAAAjX,GAAA3L,KAAA2L,GACAA,GAAA2R,YAEA3R,EAAAuX,IAAAljB,KAAAmI,EAAAnI,KAAAqI,EAAArI,KAAAqd,OAAA,IAAAzL,KAAAa,IACA9G,EAAA+R,YAEA/R,EAAAwX,YAAAnjB,KAAAsgB,YACA3U,EAAAyX,UAAApjB,KAAAqjB,YAEA1X,EAAA2X,UAAAtjB,KAAAogB,UAEAzU,EAAAuU,OACAvU,EAAA0U,aA+BAla,EAAAod,IAAApd,EAAAqb,QAAA3a,QACAgc,QAAA,SAAAC,EAAAC,GAEA,GAAAS,GAAApX,EAAAuG,kBAAA3S,MACAmI,EAAA2a,EACAza,EAAA0a,IAIAU,EAAAD,EAAAtQ,OAAAlT,KAAA0jB,YAAAF,EAAAtQ,OAAAlT,KAAA2jB,SACAC,EAAAJ,EAAApQ,UAAApT,KAAA6jB,aAAAL,EAAApQ,UAAApT,KAAA8jB,WAEA,OAAAL,IAAAG,GAGAnC,gBAAA,WACA,GAAAsC,GAAA/jB,KAAA0jB,YAAA1jB,KAAA2jB,SAAA3jB,KAAA0jB,YAAA,EACAM,GAAAhkB,KAAA8jB,YAAA9jB,KAAA6jB,aAAA,EAAA7jB,KAAA6jB,WACA,QACA1b,EAAAnI,KAAAmI,EAAAyJ,KAAAuF,IAAA4M,GAAAC,EACA3b,EAAArI,KAAAqI,EAAAuJ,KAAAyF,IAAA0M,GAAAC,IAGAlgB,KAAA,SAAAmgB,GAEA,GAEAtY,GAAA3L,KAAA2L,GAEAA,GAAA2R,YAEA3R,EAAAuX,IAAAljB,KAAAmI,EAAAnI,KAAAqI,EAAArI,KAAA8jB,YAAA9jB,KAAA0jB,WAAA1jB,KAAA2jB,UAEAhY,EAAAuX,IAAAljB,KAAAmI,EAAAnI,KAAAqI,EAAArI,KAAA6jB,YAAA7jB,KAAA2jB,SAAA3jB,KAAA0jB,YAAA,GAEA/X,EAAA+R,YACA/R,EAAAwX,YAAAnjB,KAAAsgB,YACA3U,EAAAyX,UAAApjB,KAAAqjB,YAEA1X,EAAA2X,UAAAtjB,KAAAogB,UAEAzU,EAAAuU,OACAvU,EAAAuY,SAAA,QAEAlkB,KAAAmkB,YACAxY,EAAA0U,YAKAla,EAAAie,UAAAje,EAAAqb,QAAA3a,QACA/C,KAAA,WACA,GAAA6H,GAAA3L,KAAA2L,IACA0Y,EAAArkB,KAAAwI,MAAA,EACA8b,EAAAtkB,KAAAmI,EAAAkc,EACAE,EAAAvkB,KAAAmI,EAAAkc,EACA/c,EAAAtH,KAAA6P,MAAA7P,KAAA6P,KAAA7P,KAAAqI,GACAmc,EAAAxkB,KAAAqjB,YAAA,CAIArjB,MAAAmkB,aACAG,GAAAE,EACAD,GAAAC,EACAld,GAAAkd,GAGA7Y,EAAA2R,YAEA3R,EAAA2X,UAAAtjB,KAAAogB,UACAzU,EAAAwX,YAAAnjB,KAAAsgB,YACA3U,EAAAyX,UAAApjB,KAAAqjB,YAIA1X,EAAA4R,OAAA+G,EAAAtkB,KAAA6P,MACAlE,EAAA6R,OAAA8G,EAAAhd,GACAqE,EAAA6R,OAAA+G,EAAAjd,GACAqE,EAAA6R,OAAA+G,EAAAvkB,KAAA6P,MACAlE,EAAAuU,OACAlgB,KAAAmkB,YACAxY,EAAA0U,UAGA5X,OAAA,WACA,MAAAzI,MAAA6P,KAAA7P,KAAAqI,GAEAwa,QAAA,SAAAC,EAAAC,GACA,MAAAD,IAAA9iB,KAAAmI,EAAAnI,KAAAwI,MAAA,GAAAsa,GAAA9iB,KAAAmI,EAAAnI,KAAAwI,MAAA,GAAAua,GAAA/iB,KAAAqI,GAAA0a,GAAA/iB,KAAA6P,QAIA1J,EAAAub,QAAAvb,EAAAqb,QAAA3a,QACA/C,KAAA,WAEA,GAAA6H,GAAA3L,KAAA8b,MAAAnQ,GAEAA,GAAAmR,KAAAL,EAAAzc,KAAA4gB,SAAA5gB,KAAA2c,UAAA3c,KAAA4c,YAEA5c,KAAAykB,OAAA,SACAzkB,KAAA0kB,OAAA,OAGA,IAAAC,GAAA3kB,KAAA2kB,aAAA,EAEAC,EAAAjZ,EAAAwR,YAAAnd,KAAAwE,MAAAgE,MAAA,EAAAxI,KAAAwgB,SACAqE,EAAA7kB,KAAA4gB,SAAA,EAAA5gB,KAAAygB,SACAqE,EAAAD,EAAA7kB,KAAA2hB,YAAAgD,CAEA3kB,MAAAmI,EAAAyc,EAAA,EAAA5kB,KAAA8b,MAAAtT,MACAxI,KAAAykB,OAAA,OACIzkB,KAAAmI,EAAAyc,EAAA,MACJ5kB,KAAAykB,OAAA,SAGAzkB,KAAAqI,EAAAyc,EAAA,IACA9kB,KAAA0kB,OAAA,QAIA,IAAAK,GAAA/kB,KAAAmI,EAAAyc,EAAA,EACAI,EAAAhlB,KAAAqI,EAAAyc,CAKA,IAHAnZ,EAAA2X,UAAAtjB,KAAAogB,UAGApgB,KAAAuhB,OACAvhB,KAAAuhB,OAAAvhB,UAEA,CACA,OAAAA,KAAA0kB,QAEA,YAEA/Y,EAAA2R,YACA3R,EAAA4R,OAAAvd,KAAAmI,EAAAnI,KAAAqI,EAAAsc,GACAhZ,EAAA6R,OAAAxd,KAAAmI,EAAAnI,KAAA2hB,YAAA3hB,KAAAqI,GAAAsc,EAAA3kB,KAAA2hB,cACAhW,EAAA6R,OAAAxd,KAAAmI,EAAAnI,KAAA2hB,YAAA3hB,KAAAqI,GAAAsc,EAAA3kB,KAAA2hB,cACAhW,EAAA+R,YACA/R,EAAAuU,MACA,MACA,aACA8E,EAAAhlB,KAAAqI,EAAAsc,EAAA3kB,KAAA2hB,YAEAhW,EAAA2R,YACA3R,EAAA4R,OAAAvd,KAAAmI,EAAAnI,KAAAqI,EAAAsc,GACAhZ,EAAA6R,OAAAxd,KAAAmI,EAAAnI,KAAA2hB,YAAA3hB,KAAAqI,EAAAsc,EAAA3kB,KAAA2hB,aACAhW,EAAA6R,OAAAxd,KAAAmI,EAAAnI,KAAA2hB,YAAA3hB,KAAAqI,EAAAsc,EAAA3kB,KAAA2hB,aACAhW,EAAA+R,YACA/R,EAAAuU,OAIA,OAAAlgB,KAAAykB,QAEA,WACAM,EAAA/kB,KAAAmI,EAAAyc,GAAA5kB,KAAAihB,aAAAjhB,KAAA2hB,YACA,MACA,aACAoD,EAAA/kB,KAAAmI,GAAAnI,KAAAihB,aAAAjhB,KAAA2hB,aAIAvE,EAAAzR,EAAAoZ,EAAAC,EAAAJ,EAAAC,EAAA7kB,KAAAihB,cAEAtV,EAAAuU,OAEAvU,EAAA2X,UAAAtjB,KAAA2gB,UACAhV,EAAAsZ,UAAA,SACAtZ,EAAAuZ,aAAA,SACAvZ,EAAAwZ,SAAAnlB,KAAAwE,KAAAugB,EAAAH,EAAA,EAAAI,EAAAH,EAAA,OAKA1e,EAAAoa,aAAApa,EAAAqb,QAAA3a,QACAkX,WAAA,WACA/d,KAAA8c,KAAAL,EAAAzc,KAAA4gB,SAAA5gB,KAAA2c,UAAA3c,KAAA4c,YAEA5c,KAAAolB,UAAA3I,EAAAzc,KAAAghB,cAAAhhB,KAAA+gB,eAAA/gB,KAAA8gB,iBAEA9gB,KAAAyI,OAAAzI,KAAAkhB,OAAAphB,OAAAE,KAAA4gB,UAAA5gB,KAAAkhB,OAAAphB,OAAA,IAAAE,KAAA4gB,SAAA,KAAA5gB,KAAAygB,SAAA,IAAAzgB,KAAAghB,cAEAhhB,KAAA2L,IAAAmR,KAAA9c,KAAAolB,SAEA,IAAAC,GAAArlB,KAAA2L,IAAAwR,YAAAnd,KAAAqhB,OAAA7Y,MAEA8c,EAAAzI,EAAA7c,KAAA2L,IAAA3L,KAAA8c,KAAA9c,KAAAkhB,QAAAlhB,KAAA4gB,SAAA,EACA2E,EAAA1d,GAAAyd,EAAAD,GAEArlB,MAAAwI,MAAA+c,EAAA,EAAAvlB,KAAAwgB,QAGA,IAAAgF,GAAAxlB,KAAAyI,OAAA,CAGAzI,MAAAqI,EAAAmd,EAAA,EACAxlB,KAAAqI,EAAAmd,EACIxlB,KAAAqI,EAAAmd,EAAAxlB,KAAA8b,MAAArT,SACJzI,KAAAqI,EAAArI,KAAA8b,MAAArT,OAAA+c,GAIAxlB,KAAAmI,EAAAnI,KAAA8b,MAAAtT,MAAA,EACAxI,KAAAmI,GAAAnI,KAAA0gB,QAAA1gB,KAAAwI,MAEAxI,KAAAmI,GAAAnI,KAAA0gB,SAKA+E,cAAA,SAAApP,GACA,GAAAqP,GAAA1lB,KAAAqI,EAAArI,KAAAyI,OAAA,EAAAzI,KAAAygB,SACAkF,EAAAtP,EAAA,CAGA,YAAAA,EACAqP,EAAA1lB,KAAAghB,cAAA,EAEA0E,GAAA,IAAA1lB,KAAA4gB,SAAA+E,EAAA3lB,KAAA4gB,SAAA,OAAA5gB,KAAAghB,eAIAld,KAAA,WAEA,GAAA9D,KAAAuhB,OACAvhB,KAAAuhB,OAAAvhB,UAEA,CACAod,EAAApd,KAAA2L,IAAA3L,KAAAmI,EAAAnI,KAAAqI,EAAArI,KAAAyI,OAAA,EAAAzI,KAAAwI,MAAAxI,KAAAyI,OAAAzI,KAAAihB,aACA,IAAAtV,GAAA3L,KAAA2L,GACAA,GAAA2X,UAAAtjB,KAAAogB,UACAzU,EAAAuU,OACAvU,EAAA+R,YAEA/R,EAAAsZ,UAAA,OACAtZ,EAAAuZ,aAAA,SACAvZ,EAAA2X,UAAAtjB,KAAA6gB,eACAlV,EAAAmR,KAAA9c,KAAAolB,UAEAzZ,EAAAwZ,SAAAnlB,KAAAqhB,MAAArhB,KAAAmI,EAAAnI,KAAAwgB,SAAAxgB,KAAAylB,cAAA,IAEA9Z,EAAAmR,KAAA9c,KAAA8c,KACA1Q,EAAA3K,KAAAzB,KAAAkhB,OAAA,SAAAI,EAAAjL,GACA1K,EAAA2X,UAAAtjB,KAAA2gB,UACAhV,EAAAwZ,SAAA7D,EAAAthB,KAAAmI,EAAAnI,KAAAwgB,SAAAxgB,KAAA4gB,SAAA,EAAA5gB,KAAAylB,cAAApP,EAAA,IAMA1K,EAAA2X,UAAAtjB,KAAAohB,sBACAzV,EAAAia,SAAA5lB,KAAAmI,EAAAnI,KAAAwgB,SAAAxgB,KAAAylB,cAAApP,EAAA,GAAArW,KAAA4gB,SAAA,EAAA5gB,KAAA4gB,SAAA5gB,KAAA4gB,UAEAjV,EAAA2X,UAAAtjB,KAAAmhB,aAAA9K,GAAA6J,KACAvU,EAAAia,SAAA5lB,KAAAmI,EAAAnI,KAAAwgB,SAAAxgB,KAAAylB,cAAApP,EAAA,GAAArW,KAAA4gB,SAAA,EAAA5gB,KAAA4gB,SAAA5gB,KAAA4gB,WAGK5gB,UAKLmG,EAAA0f,MAAA1f,EAAAqb,QAAA3a,QACAkX,WAAA,WACA/d,KAAA8lB,OAEAC,aAAA,WACA/lB,KAAAgmB,UAIA,QAFAC,GAAAnU,EAAA9R,KAAAsV,WAEA5V,EAAA,EAAgBA,GAAAM,KAAAyV,MAAe/V,IAC/BM,KAAAgmB,QAAAtkB,KAAA4S,EAAAtU,KAAA0V,gBAAoD1U,OAAAhB,KAAA6R,IAAAnS,EAAAM,KAAAsV,WAAA4Q,QAAAD,KAEpDjmB,MAAAmmB,YAAAnmB,KAAA4iB,SAAA5iB,KAAAomB,WAAAvJ,EAAA7c,KAAA2L,IAAA3L,KAAA8c,KAAA9c,KAAAgmB,SAAA,GAEAK,UAAA,SAAA/E,GACAthB,KAAAsmB,QAAA5kB,KAAA4f,GACAthB,KAAAumB,cACAvmB,KAAA8lB,OAEAU,aAAA,WACAxmB,KAAAsmB,QAAAG,QACAzmB,KAAAumB,cACAvmB,KAAA8lB,OAGAA,IAAA,WAIA9lB,KAAA0mB,WAAA1mB,KAAA,QAAAA,KAAA4gB,SAAA,EACA5gB,KAAA2mB,SAAA3mB,KAAA,QAAAA,KAAAyI,OAAA,IAAAzI,KAAA4gB,SAAA,EAAA5gB,KAAAyI,OAGAzI,KAAA0mB,YAAA1mB,KAAA4mB,QACA5mB,KAAA2mB,UAAA3mB,KAAA4mB,OAGA,IACAC,GADAC,EAAA9mB,KAAA2mB,SAAA3mB,KAAA0mB,UAqBA,KARA1mB,KAAA+mB,gBAAAD,GAIA9mB,KAAA+lB,eAEA/lB,KAAAgnB,0BAEAF,EAAA9mB,KAAA2mB,SAAA3mB,KAAA0mB,YACAI,EAAA9mB,KAAA2mB,SAAA3mB,KAAA0mB,WACAG,EAAA7mB,KAAAmmB,YAEAnmB,KAAA+mB,gBAAAD,GACA9mB,KAAA+lB,eAGAc,EAAA7mB,KAAAmmB,aACAnmB,KAAAgnB,2BAKAA,wBAAA,WAIAhnB,KAAA2L,IAAAmR,KAAA9c,KAAA8c,IAEA,IAEAmK,GAFAC,EAAAlnB,KAAA2L,IAAAwR,YAAAnd,KAAAsmB,QAAA,IAAA9d,MACA2e,EAAAnnB,KAAA2L,IAAAwR,YAAAnd,KAAAsmB,QAAAtmB,KAAAsmB,QAAAxmB,OAAA,IAAA0I,KASA,IAJAxI,KAAAonB,mBAAAD,EAAA,IACAnnB,KAAAqnB,kBAAAH,EAAA,EAAAlnB,KAAAmmB,YAAA,GAAAe,EAAA,EAAAlnB,KAAAmmB,YAAA,GAEAnmB,KAAAsnB,eAAA,EACAtnB,KAAA4iB,QAAA,CACA,GACA2E,GADAC,EAAA3K,EAAA7c,KAAA2L,IAAA3L,KAAA8c,KAAA9c,KAAAsmB,QAGAtmB,MAAAynB,YAAAD,CAKA,KAHA,GAAAE,GAAA9V,KAAAwC,MAAApU,KAAA2nB,WAAA,GAAA3nB,KAAA2nB,WAAA,MAGA3nB,KAAAynB,YAAAC,GAAA,IAAA1nB,KAAAsnB,gBAAAtnB,KAAAynB,YAAAC,GAAA1nB,KAAAsnB,gBAAA,IAAAtnB,KAAAsnB,eAAA,GACAC,EAAA3V,KAAAuF,IAAA7E,EAAAtS,KAAAsnB,iBAEAL,EAAAM,EAAAL,EACAK,EAAAJ,EAGAF,EAAAjnB,KAAA4gB,SAAA,EAAA5gB,KAAAmmB,YAAA,IACAnmB,KAAAqnB,kBAAAJ,EAAAjnB,KAAA4gB,SAAA,GAEA5gB,KAAAonB,mBAAApnB,KAAA4gB,SAAA,EAGA5gB,KAAAsnB,iBACAtnB,KAAAynB,YAAAF,EAAAC,CAGAxnB,MAAAsnB,eAAA,IACAtnB,KAAA2mB,UAAA/U,KAAAyF,IAAA/E,EAAAtS,KAAAsnB,iBAAAE,EAAA,OAIAxnB,MAAAynB,YAAA,EACAznB,KAAAonB,mBAAApnB,KAAA4mB,QACA5mB,KAAAqnB,kBAAArnB,KAAA4mB,SAMAG,gBAAA/V,EACA4W,YAAA,WACA,MAAA5nB,MAAA0mB,WAAA1mB,KAAA2mB,UAEAkB,WAAA,SAAA7mB,GACA,GAAA8mB,GAAA9nB,KAAA4nB,eAAA5nB,KAAA6R,IAAA7R,KAAA6H,IACA,OAAA7H,MAAA2mB,SAAAmB,GAAA9mB,EAAAhB,KAAA6R,MAEA8V,WAAA,SAAAtR,GACA,GAEA0R,IAFA/nB,KAAAsnB,eAEAtnB,KAAAwI,OAAAxI,KAAAqnB,kBAAArnB,KAAAonB,qBACAY,EAAAD,EAAAnW,KAAA/J,IAAA7H,KAAAumB,aAAAvmB,KAAA,wBACAioB,EAAAD,EAAA3R,EAAArW,KAAAqnB,iBAMA,OAJArnB,MAAAkoB,kBACAD,GAAAD,EAAA,GAGApW,KAAA4D,MAAAyS,IAEA1F,OAAA,SAAAC,GACApW,EAAAvF,OAAA7G,KAAAwiB,GACAxiB,KAAA8lB,OAEAhiB,KAAA,WACA,GAAA6H,GAAA3L,KAAA2L,IACAwc,GAAAnoB,KAAA2mB,SAAA3mB,KAAA0mB,YAAA1mB,KAAAyV,MACA2S,EAAAxW,KAAA4D,MAAAxV,KAAAqnB,kBACArnB,MAAA4iB,UACAjX,EAAA2X,UAAAtjB,KAAA2gB,UACAhV,EAAAmR,KAAA9c,KAAA8c,KACArb,EAAAzB,KAAAgmB,QAAA,SAAAqC,EAAAhS,GACA,GAAAiS,GAAAtoB,KAAA2mB,SAAAwB,EAAA9R,EACAkS,EAAA3W,KAAA4D,MAAA8S,GACAE,EAAAxoB,KAAAyoB,mBAEA9c,GAAAsZ,UAAA,QACAtZ,EAAAuZ,aAAA,SACAllB,KAAAomB,YACAza,EAAAwZ,SAAAkD,EAAAD,EAAA,GAAAE,GAIA,IAAAjS,GAAAmS,IACAA,GAAA,GAGAA,GACA7c,EAAA2R,YAGAjH,EAAA,GAEA1K,EAAAyX,UAAApjB,KAAA0oB,cACA/c,EAAAwX,YAAAnjB,KAAA2oB,gBAGAhd,EAAAyX,UAAApjB,KAAAojB,UACAzX,EAAAwX,YAAAnjB,KAAA4oB,WAGAL,GAAAnc,EAAAsG,WAAA/G,EAAAyX,WAEAoF,IACA7c,EAAA4R,OAAA6K,EAAAG,GACA5c,EAAA6R,OAAAxd,KAAAwI,MAAA+f,GACA5c,EAAA0U,SACA1U,EAAA+R,aAGA/R,EAAAyX,UAAApjB,KAAAojB,UACAzX,EAAAwX,YAAAnjB,KAAA4oB,UACAjd,EAAA2R,YACA3R,EAAA4R,OAAA6K,EAAA,EAAAG,GACA5c,EAAA6R,OAAA4K,EAAAG,GACA5c,EAAA0U,SACA1U,EAAA+R,aAEK1d,MAELyB,EAAAzB,KAAAsmB,QAAA,SAAAhF,EAAAjL,GACA,GAAAwS,GAAA7oB,KAAA2nB,WAAAtR,GAAA3D,EAAA1S,KAAAojB,WAEA0F,EAAA9oB,KAAA2nB,WAAAtR,GAAArW,KAAAkoB,gBAAA,OAAAxV,EAAA1S,KAAAojB,WACA2F,EAAA/oB,KAAAsnB,eAAA,EACA0B,EAAAhpB,KAAAipB,iBAGA,KAAA5S,GAAA2S,IACAA,GAAA,GAGAA,GACArd,EAAA2R,YAGAjH,EAAA,GAEA1K,EAAAyX,UAAApjB,KAAA0oB,cACA/c,EAAAwX,YAAAnjB,KAAA2oB,gBAGAhd,EAAAyX,UAAApjB,KAAAojB,UACAzX,EAAAwX,YAAAnjB,KAAA4oB,WAGAI,IACArd,EAAA4R,OAAAuL,EAAA9oB,KAAA2mB,UACAhb,EAAA6R,OAAAsL,EAAA9oB,KAAA0mB,WAAA,GACA/a,EAAA0U,SACA1U,EAAA+R,aAIA/R,EAAAyX,UAAApjB,KAAAojB,UACAzX,EAAAwX,YAAAnjB,KAAA4oB,UAIAjd,EAAA2R,YACA3R,EAAA4R,OAAAuL,EAAA9oB,KAAA2mB,UACAhb,EAAA6R,OAAAsL,EAAA9oB,KAAA2mB,SAAA,GACAhb,EAAA0U,SACA1U,EAAA+R,YAEA/R,EAAAyW,OACAzW,EAAAud,UAAAL,EAAA,EAAA7oB,KAAA2mB,SAAA,GAAA3mB,KAAA2mB,SAAA,GACAhb,EAAAwd,QAAA,EAAA7W,EAAAtS,KAAAsnB,iBACA3b,EAAAmR,KAAA9c,KAAA8c,KACAnR,EAAAsZ,UAAA,mBACAtZ,EAAAuZ,aAAA,iBACAvZ,EAAAwZ,SAAA7D,EAAA,KACA3V,EAAA0W,WACKriB,UAOLmG,EAAAijB,YAAAjjB,EAAAqb,QAAA3a,QACAkX,WAAA,WACA/d,KAAAqpB,KAAAxX,GAAA7R,KAAAyI,OAAAzI,KAAAwI,QACAxI,KAAA4nB,YAAA5nB,KAAA,QAAAA,KAAAqpB,KAAA,GAAArpB,KAAA4gB,SAAA,EAAA5gB,KAAAspB,kBAAAtpB,KAAAqpB,KAAA,GAEAE,sBAAA,SAAAvoB,GAEA,GAAA8mB,GAAA9nB,KAAA4nB,aAAA5nB,KAAA6H,IAAA7H,KAAA6R,IAEA,QAAA7Q,EAAAhB,KAAA6R,KAAAiW,GAEAvF,OAAA,WACAviB,KAAAwpB,QAGAxpB,KAAA4nB,YAAA5nB,KAAA,QAAAA,KAAAqpB,KAAA,GAAArpB,KAAA4gB,SAAA,EAAA5gB,KAAAspB,kBAAAtpB,KAAAqpB,KAAA,EAFArpB,KAAAypB,eAIAzpB,KAAA+lB,gBAEAA,aAAA,WACA/lB,KAAAgmB,UAIA,QAFAC,GAAAnU,EAAA9R,KAAAsV,WAEA5V,EAAA,EAAgBA,GAAAM,KAAAyV,MAAe/V,IAC/BM,KAAAgmB,QAAAtkB,KAAA4S,EAAAtU,KAAA0V,gBAAoD1U,OAAAhB,KAAA6R,IAAAnS,EAAAM,KAAAsV,WAAA4Q,QAAAD,OAGpDyD,iBAAA,WACA,SAAA9X,KAAAa,GAAAzS,KAAAumB,aAEAkD,aAAA,WAgCA,GACAE,GACAjqB,EACAwd,EACA0M,EAEAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAdAC,EAAAxY,GAAA7R,KAAAyI,OAAA,EAAAzI,KAAAsqB,mBAAA,EAAAtqB,KAAAwI,MAAA,IAKA+hB,EAAAvqB,KAAAwI,MAGAgiB,EAAA,CASA,KADAxqB,KAAA2L,IAAAmR,KAAAL,EAAAzc,KAAAsqB,mBAAAtqB,KAAAyqB,oBAAAzqB,KAAA0qB,sBACAhrB,EAAA,EAAYA,EAAAM,KAAAumB,YAAmB7mB,IAE/BiqB,EAAA3pB,KAAA2qB,iBAAAjrB,EAAA2qB,GACAnN,EAAAld,KAAA2L,IAAAwR,YAAA7I,EAAAtU,KAAA0V,gBAAoE1U,MAAAhB,KAAAkhB,OAAAxhB,MAAwB8I,MAAA,EAC5F,IAAA9I,OAAAM,KAAAumB,YAAA,GAIAqD,EAAA1M,EAAA,EACAyM,EAAAxhB,EAAAyhB,EAAAW,IACAA,EAAAZ,EAAAxhB,EAAAyhB,EACAC,EAAAnqB,GAEAiqB,EAAAxhB,EAAAyhB,EAAAY,IACAA,EAAAb,EAAAxhB,EAAAyhB,EACAG,EAAArqB,IAGAA,EAAAM,KAAAumB,YAAA,EAEAoD,EAAAxhB,EAAA+U,EAAAqN,IACAA,EAAAZ,EAAAxhB,EAAA+U,EACA2M,EAAAnqB,GAGAA,EAAAM,KAAAumB,YAAA,GAEAoD,EAAAxhB,EAAA+U,EAAAsN,IACAA,EAAAb,EAAAxhB,EAAA+U,EACA6M,EAAArqB,EAKAuqB,GAAAO,EAEAN,EAAAtY,KAAAuD,KAAAoV,EAAAvqB,KAAAwI,OAEAshB,EAAA9pB,KAAA4qB,cAAAf,GAEAG,EAAAhqB,KAAA4qB,cAAAb,GAEAI,EAAAD,EAAAtY,KAAAyF,IAAAyS,EAAAlY,KAAAa,GAAA,GAEA2X,EAAAH,EAAArY,KAAAyF,IAAA2S,EAAApY,KAAAa,GAAA,GAGA0X,EAAA5Y,EAAA4Y,KAAA,EACAC,EAAA7Y,EAAA6Y,KAAA,EAEApqB,KAAA4nB,YAAAyC,GAAAD,EAAAD,GAAA,EAGAnqB,KAAA6qB,eAAAT,EAAAD,IAGAU,eAAA,SAAAC,EAAAC,GAEA,GAAAC,GAAAhrB,KAAAwI,MAAAuiB,EAAA/qB,KAAA4nB,YACAqD,EAAAH,EAAA9qB,KAAA4nB,WAEA5nB,MAAAkrB,SAAAD,EAAAD,GAAA,EAEAhrB,KAAAmrB,QAAAnrB,KAAAyI,OAAA,GAGAmiB,cAAA,SAAAvU,GAIA,MAAAA,IAHA,EAAAzE,KAAAa,GAAAzS,KAAAumB,aAGA3U,KAAAa,GAAA,GAEAkY,iBAAA,SAAAtU,EAAA+U,GACA,GAAAC,GAAArrB,KAAA4qB,cAAAvU,EACA,QACAlO,EAAAyJ,KAAAuF,IAAAkU,GAAAD,EAAAprB,KAAAkrB,QACA7iB,EAAAuJ,KAAAyF,IAAAgU,GAAAD,EAAAprB,KAAAmrB,UAGArnB,KAAA,WACA,GAAA9D,KAAA4iB,QAAA,CACA,GAAAjX,GAAA3L,KAAA2L,GAqDA,IApDAlK,EAAAzB,KAAAgmB,QAAA,SAAA1E,EAAAjL,GAEA,GAAAA,EAAA,GACA,GAEAsT,GAFA2B,EAAAjV,GAAArW,KAAA4nB,YAAA5nB,KAAAyV,OACA8V,EAAAvrB,KAAAmrB,QAAAG,CAIA,IAAAtrB,KAAAojB,UAAA,EAIA,GAHAzX,EAAAwX,YAAAnjB,KAAA4oB,UACAjd,EAAAyX,UAAApjB,KAAAojB,UAEApjB,KAAAwpB,QACA7d,EAAA2R,YACA3R,EAAAuX,IAAAljB,KAAAkrB,QAAAlrB,KAAAmrB,QAAAG,EAAA,IAAA1Z,KAAAa,IACA9G,EAAA+R,YACA/R,EAAA0U,aACQ,CACR1U,EAAA2R,WACA,QAAA5d,GAAA,EAAqBA,EAAAM,KAAAumB,YAAmB7mB,IAExCiqB,EAAA3pB,KAAA2qB,iBAAAjrB,EAAAM,KAAAupB,sBAAAvpB,KAAA6R,IAAAwE,EAAArW,KAAAsV,YACA,IAAA5V,EACAiM,EAAA4R,OAAAoM,EAAAxhB,EAAAwhB,EAAAthB,GAEAsD,EAAA6R,OAAAmM,EAAAxhB,EAAAwhB,EAAAthB,EAGAsD,GAAA+R,YACA/R,EAAA0U,SAGA,GAAArgB,KAAAomB,WAAA,CAEA,GADAza,EAAAmR,KAAAL,EAAAzc,KAAA4gB,SAAA5gB,KAAA2c,UAAA3c,KAAA4c,YACA5c,KAAAwrB,kBAAA,CACA,GAAAlG,GAAA3Z,EAAAwR,YAAAmE,GAAA9Y,KACAmD,GAAA2X,UAAAtjB,KAAAyrB,cACA9f,EAAAia,SACA5lB,KAAAkrB,QAAA5F,EAAA,EAAAtlB,KAAA0rB,iBACAH,EAAAvrB,KAAA4gB,SAAA,EAAA5gB,KAAAspB,iBACAhE,EAAA,EAAAtlB,KAAA0rB,iBACA1rB,KAAA4gB,SAAA,EAAA5gB,KAAAspB,kBAGA3d,EAAAsZ,UAAA,SACAtZ,EAAAuZ,aAAA,SACAvZ,EAAA2X,UAAAtjB,KAAA2rB,UACAhgB,EAAAwZ,SAAA7D,EAAAthB,KAAAkrB,QAAAK,MAGKvrB,OAELA,KAAAwpB,QAAA,CACA7d,EAAAyX,UAAApjB,KAAA4rB,eACAjgB,EAAAwX,YAAAnjB,KAAA6rB,cACA,QAAAnsB,GAAAM,KAAAumB,YAAA,EAAuC7mB,GAAA,EAAQA,IAAA,CAC/C,GAAAM,KAAA4rB,eAAA,GACA,GAAAE,GAAA9rB,KAAA2qB,iBAAAjrB,EAAAM,KAAAupB,sBAAAvpB,KAAA6H,KACA8D,GAAA2R,YACA3R,EAAA4R,OAAAvd,KAAAkrB,QAAAlrB,KAAAmrB,SACAxf,EAAA6R,OAAAsO,EAAA3jB,EAAA2jB,EAAAzjB,GACAsD,EAAA0U,SACA1U,EAAA+R,YAGA,GAAAqO,GAAA/rB,KAAA2qB,iBAAAjrB,EAAAM,KAAAupB,sBAAAvpB,KAAA6H,KAAA,EACA8D,GAAAmR,KAAAL,EAAAzc,KAAAsqB,mBAAAtqB,KAAAyqB,oBAAAzqB,KAAA0qB,sBACA/e,EAAA2X,UAAAtjB,KAAAgsB,mBAEA,IAAAC,GAAAjsB,KAAAkhB,OAAAphB,OACAosB,EAAAlsB,KAAAkhB,OAAAphB,OAAA,EACAqsB,EAAAD,EAAA,EACAE,EAAA1sB,EAAAysB,GAAAzsB,EAAAusB,EAAAE,EACAE,EAAA3sB,IAAAysB,GAAAzsB,IAAAusB,EAAAE,CAEAxgB,GAAAsZ,UADA,IAAAvlB,EACA,SACOA,IAAAwsB,EACP,SACOxsB,EAAAwsB,EACP,OAEA,QAKAvgB,EAAAuZ,aADAmH,EACA,SACOD,EACP,SAEA,MAGAzgB,EAAAwZ,SAAAnlB,KAAAkhB,OAAAxhB,GAAAqsB,EAAA5jB,EAAA4jB,EAAA1jB,SAQA+D,EAAAmN,SAAArT,OAAA,oBAEA,GAAAomB,EACA,mBACAhT,aAAAgT,GACAA,EAAAvT,WAAA,WACAtX,EAAA0E,EAAAwX,UAAA,SAAA4O,GAGAA,EAAA1O,QAAAnQ,YACA6e,EAAAzO,OAAAyO,EAAAnO,QAAA,MAGI,SAKJ9M,MAGGkb,MAFHlhB,EAAA,WACA,MAAAnF,IACGnH,KAAAF,EAAAK,EAAAL,EAAAD,QAAAC,QAAAwM,GACD,gBAAAzM,MAAAC,UACFD,EAAAC,QAAAqH,GAGAoF,EAAApF,QAEAA,EAAAsmB,WAAA,WAEA,MADAlhB,GAAApF,MAAAqF,EACArF,KAGCnH,KAAAgB,MAED,WACA,YAEA,IAAAuL,GAAAvL,KACAmG,EAAAoF,EAAApF,MACAiG,EAAAjG,EAAAiG,QAGAsgB,GAEArf,kBAAA,EAGAsf,oBAAA,EAGAC,mBAAA,kBAGAC,mBAAA,EAGAC,0BAAA,EAGAC,wBAAA,EAGAC,eAAA,EAGAC,eAAA,EAGAC,gBAAA,EAGAC,kBAAA,EAGA7O,eAAA,kOAKAnY,GAAAyX,KAAA/W,QACAkb,KAAA,MACAzV,SAAAogB,EACA3O,WAAA,SAAAve,GAGA,GAAAqe,GAAA7d,KAAA6d,OAEA7d,MAAAotB,WAAAjnB,EAAA0f,MAAAhf,QACAqhB,iBAAA,EACAmF,cAAA,SAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAztB,KAAA0tB,qBACAC,EAAA3tB,KAAA2nB,WAAA6F,GAAAC,EAAA,EACAG,EAAA5tB,KAAA6tB,kBAAAP,EAEA,OAAAK,GAAAC,EAAAL,IAAA1P,EAAAsP,kBAAAS,EAAA,GAEAF,mBAAA,WACA,MAAA1tB,MAAA2nB,WAAA,GAAA3nB,KAAA2nB,WAAA,KAAA9J,EAAAqP,iBAEAW,kBAAA,SAAAP,GAIA,OAFAttB,KAAA0tB,sBAAAJ,EAAA,GAAAzP,EAAAsP,mBAEAG,KAIAttB,KAAAgf,YAGAhf,KAAA6d,QAAAjQ,cACAxB,EAAAsP,WAAA1b,UAAA6d,QAAA/P,cAAA,SAAAsM,GACA,GAAA0T,GAAA,aAAA1T,EAAA2T,KAAA/tB,KAAAguB,eAAA5T,KAEApa,MAAAiuB,SAAA,SAAAC,GACAA,EAAA7L,SAAA,8BAEAjW,EAAA3K,KAAAqsB,EAAA,SAAAK,GACAA,EAAA/N,UAAA+N,EAAAC,cACAD,EAAA7N,YAAA6N,EAAAE,kBAEAruB,KAAA0e,YAAAoP,KAKA9tB,KAAAsuB,SAAAnoB,EAAAie,UAAAvd,QACAwc,YAAArjB,KAAA6d,QAAAoP,eACA9I,WAAAnkB,KAAA6d,QAAAmP,cACArhB,IAAA3L,KAAA8b,MAAAnQ,MAIAS,EAAA3K,KAAAjC,EAAAwf,SAAA,SAAAgB,EAAAuN,GAEA,GAAAgB,IACAjN,MAAAtB,EAAAsB,OAAA,KACAlB,UAAAJ,EAAAI,UACAE,YAAAN,EAAAM,YACAlB,QAGApf,MAAAgf,SAAAtd,KAAA6sB,GAEAniB,EAAA3K,KAAAue,EAAAxgB,KAAA,SAAAgvB,EAAAnY,GAEAkY,EAAAnP,KAAA1d,KAAA,GAAA1B,MAAAsuB,UACAttB,MAAAwtB,EACAlN,MAAA9hB,EAAA0hB,OAAA7K,GACAoY,aAAAzO,EAAAsB,MACAhB,YAAAN,EAAAM,YACAF,UAAAJ,EAAAI,UACAgO,cAAApO,EAAAoO,eAAApO,EAAAI,UACAiO,gBAAArO,EAAAqO,iBAAArO,EAAAM,gBAEKtgB,OAEDA,MAEJA,KAAA0uB,WAAAlvB,EAAA0hB,QAEAlhB,KAAAsuB,SAAAjrB,UAAAwM,KAAA7P,KAAA0I,MAAAie,SAEA3mB,KAAAiuB,SAAA,SAAAC,EAAA7X,EAAAkX,GACAnhB,EAAAvF,OAAAqnB,GACA1lB,MAAAxI,KAAA0I,MAAAmlB,kBAAA7tB,KAAAgf,SAAAlf,QACAqI,EAAAnI,KAAA0I,MAAA2kB,cAAArtB,KAAAgf,SAAAlf,OAAAytB,EAAAlX,GACAhO,EAAArI,KAAA0I,MAAAie,WAEAuH,EAAA9L,QACIpiB,MAEJA,KAAAoe,UAEAmE,OAAA,WACAviB,KAAA0I,MAAA6Z,SAEAnW,EAAA3K,KAAAzB,KAAA6e,eAAA,SAAA8P,GACAA,EAAAtM,SAAA,8BAGAriB,KAAAiuB,SAAA,SAAAC,GACAA,EAAA9L,SAEApiB,KAAAoe,UAEA6P,SAAA,SAAA7e,GACAhD,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,EAAAuN,GACAnhB,EAAA3K,KAAAue,EAAAZ,KAAAhQ,EAAApP,KAAAutB,IACIvtB,OAEJguB,eAAA,SAAAzT,GAQA,OAFAiT,GALAoB,KACAC,EAAAziB,EAAA+N,oBAAAI,GACAuU,EAAA,SAAA9O,GACA4O,EAAAltB,KAAAse,EAAAZ,KAAAoO,KAIAD,EAAA,EAA6BA,EAAAvtB,KAAAgf,SAAAlf,OAAqCytB,IAClE,IAAAC,EAAA,EAAsBA,EAAAxtB,KAAAgf,SAAAuO,GAAAnO,KAAAtf,OAAoD0tB,IAC1E,GAAAxtB,KAAAgf,SAAAuO,GAAAnO,KAAAoO,GAAA3K,QAAAgM,EAAA1mB,EAAA0mB,EAAAxmB,GAEA,MADA+D,GAAA3K,KAAAzB,KAAAgf,SAAA8P,GACAF,CAKA,OAAAA,IAEAF,WAAA,SAAAxN,GACA,GAAA7R,GAAArP,KAEA+uB,EAAA,WACA,GAAAC,KAIA,OAHA3f,GAAA4e,SAAA,SAAAC,GACAc,EAAAttB,KAAAwsB,EAAAltB,SAEAguB,GAGAC,GACAvZ,eAAA1V,KAAA6d,QAAA1Q,WACA1E,OAAAzI,KAAA8b,MAAArT,OACAD,MAAAxI,KAAA8b,MAAAtT,MACAmD,IAAA3L,KAAA8b,MAAAnQ,IACAgV,UAAA3gB,KAAA6d,QAAApQ,eACAmT,SAAA5gB,KAAA6d,QAAAtQ,cACAoP,UAAA3c,KAAA6d,QAAArQ,eACAoP,WAAA5c,KAAA6d,QAAAvQ,gBACAiZ,YAAArF,EAAAphB,OACAovB,YAAAlvB,KAAA6d,QAAAxQ,iBACAuH,aAAA5U,KAAA6d,QAAAzQ,kBACA2Z,gBAAA,SAAAoI,GACA,GAAAC,GAAAhjB,EAAAmI,oBACAwa,IACAI,EACAnvB,KAAA4gB,SACA5gB,KAAAkvB,YACAlvB,KAAA4U,aAEAxI,GAAAvF,OAAA7G,KAAAovB,IAEA9I,QAAApF,EACApE,KAAA1Q,EAAAqQ,WAAAzc,KAAA6d,QAAAtQ,cAAAvN,KAAA6d,QAAArQ,eAAAxN,KAAA6d,QAAAvQ,iBACA8V,UAAApjB,KAAA6d,QAAA5Q,eACA2b,UAAA5oB,KAAA6d,QAAA7Q,eACAyb,oBAAAzoB,KAAA6d,QAAAiP,yBACA7D,kBAAAjpB,KAAA6d,QAAAkP,uBACArE,cAAA1oB,KAAA6d,QAAA,mBAAA7d,KAAA6d,QAAAgP,mBAAA,EACAlE,cAAA3oB,KAAA6d,QAAA,mBAAA7d,KAAA6d,QAAA+O,mBAAA,gBACAhG,QAAA5mB,KAAA6d,QAAA,YAAA7d,KAAA6d,QAAA,cAAA7d,KAAA6d,QAAAoP,eAAA,EACA7G,WAAApmB,KAAA6d,QAAA3Q,gBACA0V,QAAA5iB,KAAA6d,QAAAlR,UAGA3M,MAAA6d,QAAAjR,eACAR,EAAAvF,OAAAooB,GACAlI,gBAAA3a,EAAA4E,KACAyE,MAAAzV,KAAA6d,QAAAhR,WACAyI,UAAAtV,KAAA6d,QAAA/Q,eACA+E,IAAA7R,KAAA6d,QAAA9Q,gBACAlF,IAAA7H,KAAA6d,QAAA9Q,gBAAA/M,KAAA6d,QAAAhR,WAAA7M,KAAA6d,QAAA/Q,iBAIA9M,KAAA0I,MAAA,GAAA1I,MAAAotB,WAAA6B,IAEAI,QAAA,SAAA7a,EAAA8M,GAEAlV,EAAA3K,KAAA+S,EAAA,SAAAxT,EAAAusB,GAEAvtB,KAAAgf,SAAAuO,GAAAnO,KAAA1d,KAAA,GAAA1B,MAAAsuB,UACAttB,QACAsgB,QACAnZ,EAAAnI,KAAA0I,MAAA2kB,cAAArtB,KAAAgf,SAAAlf,OAAAytB,EAAAvtB,KAAA0I,MAAA6d,YAAA,GACAle,EAAArI,KAAA0I,MAAAie,SACAne,MAAAxI,KAAA0I,MAAAmlB,kBAAA7tB,KAAAgf,SAAAlf,QACA+P,KAAA7P,KAAA0I,MAAAie,SACArG,YAAAtgB,KAAAgf,SAAAuO,GAAAjN,YACAF,UAAApgB,KAAAgf,SAAAuO,GAAAnN,cAEIpgB,MAEJA,KAAA0I,MAAA2d,UAAA/E,GAEAthB,KAAAuiB,UAEA+M,WAAA,WACAtvB,KAAA0I,MAAA8d,eAEApa,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACAA,EAAAZ,KAAAqH,SACIzmB,MACJA,KAAAuiB,UAEApE,OAAA,WACA/R,EAAAvF,OAAA7G,KAAAsuB,SAAAjrB,WACAgF,EAAArI,KAAA0I,MAAAie,SACA9W,KAAA7P,KAAA0I,MAAAie,UAEA,IAAA4I,GAAAnjB,EAAAvF,QACA4B,OAAAzI,KAAA8b,MAAArT,OACAD,MAAAxI,KAAA8b,MAAAtT,OAEAxI,MAAA0I,MAAA6Z,OAAAgN,IAEAzrB,KAAA,SAAA4e,GACA,GAAA8M,GAAA9M,GAAA,CACA1iB,MAAAuc,OAEAvc,MAAA8b,MAAAnQ,GAEA3L,MAAA0I,MAAA5E,KAAA0rB,GAGApjB,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,EAAAuN,GACAnhB,EAAA3K,KAAAue,EAAAZ,KAAA,SAAA8O,EAAA7X,GACA6X,EAAAjO,aACAiO,EAAAre,KAAA7P,KAAA0I,MAAAie,SAEAuH,EAAAzL,YACAta,EAAAnI,KAAA0I,MAAA2kB,cAAArtB,KAAAgf,SAAAlf,OAAAytB,EAAAlX,GACAhO,EAAArI,KAAA0I,MAAAmf,WAAAqG,EAAAltB,OACAwH,MAAAxI,KAAA0I,MAAAmlB,kBAAA7tB,KAAAgf,SAAAlf,SACO0vB,GAAA1rB,SAEF9D,OAEDA,UAKHhB,KAAAgB,MAED,WACA,YAEA,IAAAuL,GAAAvL,KACAmG,EAAAoF,EAAApF,MAEAiG,EAAAjG,EAAAiG,QAEAsgB,GAEA+C,mBAAA,EAGAC,mBAAA,OAGAC,mBAAA,EAGAC,sBAAA,GAGAnjB,eAAA,IAGAC,gBAAA,gBAGAmjB,eAAA,EAGAC,cAAA,EAGAxR,eAAA,kOAKAnY,GAAAyX,KAAA/W,QAEAkb,KAAA,WAEAzV,SAAAogB,EAGA3O,WAAA,SAAAve,GAGAQ,KAAAqf,YACArf,KAAA8jB,aAAA1X,EAAAyF,KAAA7R,KAAA8b,MAAAtT,MAAAxI,KAAA8b,MAAArT,SAAAzI,KAAA6d,QAAA8R,mBAAA,KAEA3vB,KAAA+vB,WAAA5pB,EAAAod,IAAA1c,QACA8E,IAAA3L,KAAA8b,MAAAnQ,IACAxD,EAAAnI,KAAA8b,MAAAtT,MAAA,EACAH,EAAArI,KAAA8b,MAAArT,OAAA,IAIAzI,KAAA6d,QAAAjQ,cACAxB,EAAAsP,WAAA1b,UAAA6d,QAAA/P,cAAA,SAAAsM,GACA,GAAA4V,GAAA,aAAA5V,EAAA2T,KAAA/tB,KAAAiwB,mBAAA7V,KAEAhO,GAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAA7N,SAAA,gBAEAjW,EAAA3K,KAAAuuB,EAAA,SAAAG,GACAA,EAAA/P,UAAA+P,EAAAC,iBAEApwB,KAAA0e,YAAAsR,KAGAhwB,KAAAqwB,eAAA7wB,GAEA4M,EAAA3K,KAAAjC,EAAA,SAAA8wB,EAAAja,GACArW,KAAAqvB,QAAAiB,EAAAja,GAAA,IACIrW,MAEJA,KAAAoe,UAEA6R,mBAAA,SAAA1V,GACA,GAAAgW,MAEAC,EAAApkB,EAAA+N,oBAAAI,EAKA,OAHAnO,GAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAArN,QAAA2N,EAAAroB,EAAAqoB,EAAAnoB,IAAAkoB,EAAA7uB,KAAAwuB,IACIlwB,MACJuwB,GAEAlB,QAAA,SAAAa,EAAAO,EAAAC,GACA,GAAAra,GAAAoa,GAAAzwB,KAAAqf,SAAAvf,MACAE,MAAAqf,SAAAsR,OAAAta,EAAA,KAAArW,MAAA+vB,YACA/uB,MAAAkvB,EAAAlvB,MACA8iB,YAAA9jB,KAAA6d,QAAA,eAAA7d,KAAA8jB,YACAD,YAAA7jB,KAAA6d,QAAA,eAAA7d,KAAA8jB,YAAA,IAAA9jB,KAAA6d,QAAA+R,sBACAxP,UAAA8P,EAAAU,MACAR,eAAAF,EAAAW,WAAAX,EAAAU,MACAzM,WAAAnkB,KAAA6d,QAAA4R,kBACApM,YAAArjB,KAAA6d,QAAA8R,mBACArP,YAAAtgB,KAAA6d,QAAA6R,mBACAhM,WAAA,IAAA9R,KAAAa,GACAqe,cAAA9wB,KAAA6d,QAAA,gBAAA7d,KAAA+wB,uBAAAb,EAAAlvB,OACAsgB,MAAA4O,EAAA5O,SAEAoP,IACA1wB,KAAAme,SACAne,KAAAuiB,WAGAwO,uBAAA,SAAA/vB,GACA,SAAA4Q,KAAAa,IAAAb,KAAAoD,IAAAhU,GAAAhB,KAAAJ,QAEAywB,eAAA,SAAA7wB,GACAQ,KAAAJ,MAAA,EACAwM,EAAA3K,KAAAjC,EAAA,SAAA0wB,GACAlwB,KAAAJ,OAAAgS,KAAAoD,IAAAkb,EAAAlvB,QACIhB,OAEJuiB,OAAA,WACAviB,KAAAqwB,eAAArwB,KAAAqf,UAGAjT,EAAA3K,KAAAzB,KAAA6e,eAAA,SAAA8P,GACAA,EAAAtM,SAAA,gBAGAjW,EAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAA9N,SAEApiB,KAAAoe,UAGAkR,WAAA,SAAAmB,GACA,GAAAO,GAAA5kB,EAAAmF,SAAAkf,KAAAzwB,KAAAqf,SAAAvf,OAAA,CACAE,MAAAqf,SAAAsR,OAAAK,EAAA,GACAhxB,KAAAme,SACAne,KAAAuiB,UAGApE,OAAA,WACA/R,EAAAvF,OAAA7G,KAAA+vB,WAAA1sB,WACA8E,EAAAnI,KAAA8b,MAAAtT,MAAA,EACAH,EAAArI,KAAA8b,MAAArT,OAAA,IAEAzI,KAAA8jB,aAAA1X,EAAAyF,KAAA7R,KAAA8b,MAAAtT,MAAAxI,KAAA8b,MAAArT,SAAAzI,KAAA6d,QAAA8R,mBAAA,KACAvjB,EAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAA3N,QACAuB,YAAA9jB,KAAA8jB,YACAD,YAAA7jB,KAAA8jB,YAAA,IAAA9jB,KAAA6d,QAAA+R,yBAEI5vB,OAEJ8D,KAAA,SAAAoW,GACA,GAAA+W,GAAA,IACAjxB,MAAAuc,QACAnQ,EAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,EAAA7Z,GACA6Z,EAAAzN,YACAqO,cAAA9wB,KAAA+wB,uBAAAb,EAAAlvB,OACA8iB,YAAA9jB,KAAA8jB,YACAD,YAAA7jB,KAAA8jB,YAAA,IAAA9jB,KAAA6d,QAAA+R,uBACKqB,GAELf,EAAAvM,SAAAuM,EAAAxM,WAAAwM,EAAAY,cAEAZ,EAAApsB,OACA,IAAAuS,IACA6Z,EAAAxM,WAAA,IAAA9R,KAAAa,IAGA4D,EAAArW,KAAAqf,SAAAvf,OAAA,IACAE,KAAAqf,SAAAhJ,EAAA,GAAAqN,WAAAwM,EAAAvM,WAEI3jB,SAKJmG,EAAA+I,MAAAgiB,SAAArqB,QACAkb,KAAA,MACAzV,SAAAF,EAAA2D,MAAA2c,GAA0CkD,sBAAA,OAGzC5wB,KAAAgB,MACD,WACA,YAEA,IAAAuL,GAAAvL,KACAmG,EAAAoF,EAAApF,MACAiG,EAAAjG,EAAAiG,QAEAsgB,GAGAC,oBAAA,EAGAC,mBAAA,kBAGAC,mBAAA,EAGAC,0BAAA,EAGAC,wBAAA,EAGAoE,aAAA,EAGAC,mBAAA,GAGAC,UAAA,EAGAC,eAAA,EAGAC,oBAAA,EAGAC,wBAAA,GAGAC,eAAA,EAGAC,mBAAA,EAGAC,aAAA,EAGArT,eAAA,oOAKAnY,GAAAyX,KAAA/W,QACAkb,KAAA,OACAzV,SAAAogB,EACA3O,WAAA,SAAAve,GAEAQ,KAAA4xB,WAAAzrB,EAAAwc,MAAA9b,QACAwc,YAAArjB,KAAA6d,QAAA0T,oBACAlU,OAAArd,KAAA6d,QAAAyT,eACA1O,QAAA5iB,KAAA6d,QAAAwT,SACApO,mBAAAjjB,KAAA6d,QAAA2T,wBACA7lB,IAAA3L,KAAA8b,MAAAnQ,IACAkX,QAAA,SAAAxI,GACA,MAAAzI,MAAAiC,IAAAwG,EAAAra,KAAAmI,EAAA,GAAAyJ,KAAAiC,IAAA7T,KAAAqd,OAAArd,KAAAijB,mBAAA,MAIAjjB,KAAAgf,YAGAhf,KAAA6d,QAAAjQ,cACAxB,EAAAsP,WAAA1b,UAAA6d,QAAA/P,cAAA,SAAAsM,GACA,GAAAyX,GAAA,aAAAzX,EAAA2T,KAAA/tB,KAAA8xB,iBAAA1X,KACApa,MAAA+xB,WAAA,SAAAC,GACAA,EAAA3P,SAAA,8BAEAjW,EAAA3K,KAAAowB,EAAA,SAAAI,GACAA,EAAA7R,UAAA6R,EAAA7D,cACA6D,EAAA3R,YAAA2R,EAAA5D,kBAEAruB,KAAA0e,YAAAmT,KAKAzlB,EAAA3K,KAAAjC,EAAAwf,SAAA,SAAAgB,GAEA,GAAAuO,IACAjN,MAAAtB,EAAAsB,OAAA,KACAlB,UAAAJ,EAAAI,UACAE,YAAAN,EAAAM,YACA4R,WAAAlS,EAAAkS,WACAC,iBAAAnS,EAAAmS,iBACAhT,UAGAnf,MAAAgf,SAAAtd,KAAA6sB,GAGAniB,EAAA3K,KAAAue,EAAAxgB,KAAA,SAAAgvB,EAAAnY,GAEAkY,EAAApP,OAAAzd,KAAA,GAAA1B,MAAA4xB,YACA5wB,MAAAwtB,EACAlN,MAAA9hB,EAAA0hB,OAAA7K,GACAoY,aAAAzO,EAAAsB,MACAhB,YAAAN,EAAAmS,iBACA/R,UAAAJ,EAAAkS,WACA9D,cAAApO,EAAAoS,oBAAApS,EAAAkS,WACA7D,gBAAArO,EAAAqS,sBAAArS,EAAAmS,qBAEKnyB,MAELA,KAAA0uB,WAAAlvB,EAAA0hB,QAGAlhB,KAAA+xB,WAAA,SAAAC,EAAA3b,GACAjK,EAAAvF,OAAAmrB,GACA7pB,EAAAnI,KAAA0I,MAAAif,WAAAtR,GACAhO,EAAArI,KAAA0I,MAAAie,WAEAqL,EAAA5P,QACKpiB,OAEDA,MAGJA,KAAAoe,UAEAmE,OAAA,WACAviB,KAAA0I,MAAA6Z,SAEAnW,EAAA3K,KAAAzB,KAAA6e,eAAA,SAAA8P,GACAA,EAAAtM,SAAA,8BAEAriB,KAAA+xB,WAAA,SAAAC,GACAA,EAAA5P,SAEApiB,KAAAoe,UAEA2T,WAAA,SAAA3iB,GACAhD,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACA5T,EAAA3K,KAAAue,EAAAb,OAAA/P,EAAApP,OACIA,OAEJ8xB,iBAAA,SAAAvX,GACA,GAAA+X,MACAzD,EAAAziB,EAAA+N,oBAAAI,EAMA,OALAnO,GAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACA5T,EAAA3K,KAAAue,EAAAb,OAAA,SAAA6S,GACAA,EAAAnP,QAAAgM,EAAA1mB,EAAA0mB,EAAAxmB,IAAAiqB,EAAA5wB,KAAAswB,MAEIhyB,MACJsyB,GAEA5D,WAAA,SAAAxN,GACA,GAAA7R,GAAArP,KAEA+uB,EAAA,WACA,GAAAC,KAKA,OAJA3f,GAAA0iB,WAAA,SAAAC,GACAhD,EAAAttB,KAAAswB,EAAAhxB,SAGAguB,GAGAC,GACAvZ,eAAA1V,KAAA6d,QAAA1Q,WACA1E,OAAAzI,KAAA8b,MAAArT,OACAD,MAAAxI,KAAA8b,MAAAtT,MACAmD,IAAA3L,KAAA8b,MAAAnQ,IACAgV,UAAA3gB,KAAA6d,QAAApQ,eACAmT,SAAA5gB,KAAA6d,QAAAtQ,cACAoP,UAAA3c,KAAA6d,QAAArQ,eACAoP,WAAA5c,KAAA6d,QAAAvQ,gBACAiZ,YAAArF,EAAAphB,OACAovB,YAAAlvB,KAAA6d,QAAAxQ,iBACAuH,aAAA5U,KAAA6d,QAAAzQ,kBACA2Z,gBAAA,SAAAoI,GACA,GAAAC,GAAAhjB,EAAAmI,oBACAwa,IACAI,EACAnvB,KAAA4gB,SACA5gB,KAAAkvB,YACAlvB,KAAA4U,aAEAxI,GAAAvF,OAAA7G,KAAAovB,IAEA9I,QAAApF,EACApE,KAAA1Q,EAAAqQ,WAAAzc,KAAA6d,QAAAtQ,cAAAvN,KAAA6d,QAAArQ,eAAAxN,KAAA6d,QAAAvQ,iBACA8V,UAAApjB,KAAA6d,QAAA5Q,eACA2b,UAAA5oB,KAAA6d,QAAA7Q,eACAyb,oBAAAzoB,KAAA6d,QAAAiP,yBACA7D,kBAAAjpB,KAAA6d,QAAAkP,uBACArE,cAAA1oB,KAAA6d,QAAA,mBAAA7d,KAAA6d,QAAAgP,mBAAA,EACAlE,cAAA3oB,KAAA6d,QAAA,mBAAA7d,KAAA6d,QAAA+O,mBAAA,gBACAhG,QAAA5mB,KAAA6d,QAAA,YAAA7d,KAAA6d,QAAAyT,eAAAtxB,KAAA6d,QAAA0T,oBACAnL,WAAApmB,KAAA6d,QAAA3Q,gBACA0V,QAAA5iB,KAAA6d,QAAAlR,UAGA3M,MAAA6d,QAAAjR,eACAR,EAAAvF,OAAAooB,GACAlI,gBAAA3a,EAAA4E,KACAyE,MAAAzV,KAAA6d,QAAAhR,WACAyI,UAAAtV,KAAA6d,QAAA/Q,eACA+E,IAAA7R,KAAA6d,QAAA9Q,gBACAlF,IAAA7H,KAAA6d,QAAA9Q,gBAAA/M,KAAA6d,QAAAhR,WAAA7M,KAAA6d,QAAA/Q,iBAKA9M,KAAA0I,MAAA,GAAAvC,GAAA0f,MAAAoJ,IAEAI,QAAA,SAAA7a,EAAA8M,GAGAlV,EAAA3K,KAAA+S,EAAA,SAAAxT,EAAAusB,GAEAvtB,KAAAgf,SAAAuO,GAAApO,OAAAzd,KAAA,GAAA1B,MAAA4xB,YACA5wB,QACAsgB,QACAnZ,EAAAnI,KAAA0I,MAAAif,WAAA3nB,KAAA0I,MAAA6d,YAAA,GACAle,EAAArI,KAAA0I,MAAAie,SACArG,YAAAtgB,KAAAgf,SAAAuO,GAAA4E,iBACA/R,UAAApgB,KAAAgf,SAAAuO,GAAA2E,eAEIlyB,MAEJA,KAAA0I,MAAA2d,UAAA/E,GAEAthB,KAAAuiB,UAEA+M,WAAA,WACAtvB,KAAA0I,MAAA8d,eAEApa,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACAA,EAAAb,OAAAsH,SACIzmB,MACJA,KAAAuiB,UAEApE,OAAA,WACA,GAAAoR,GAAAnjB,EAAAvF,QACA4B,OAAAzI,KAAA8b,MAAArT,OACAD,MAAAxI,KAAA8b,MAAAtT,OAEAxI,MAAA0I,MAAA6Z,OAAAgN,IAEAzrB,KAAA,SAAA4e,GACA,GAAA8M,GAAA9M,GAAA,CACA1iB,MAAAuc,OAEA,IAAA5Q,GAAA3L,KAAA8b,MAAAnQ,IAGAsU,EAAA,SAAAxQ,GACA,cAAAA,EAAAzO,OAEAuxB,EAAA,SAAAP,EAAAvxB,EAAA4V,GACA,MAAAjK,GAAAqE,cAAAhQ,EAAAwf,EAAA5J,IAAA2b,GAEAQ,EAAA,SAAAR,EAAAvxB,EAAA4V,GACA,MAAAjK,GAAAwE,kBAAAnQ,EAAAwf,EAAA5J,IAAA2b,EAGAhyB,MAAA0I,MAAA5E,KAAA0rB,GAGApjB,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACA,GAAAyS,GAAArmB,EAAAkE,MAAA0P,EAAAb,OAAAc,EAKA7T,GAAA3K,KAAAue,EAAAb,OAAA,SAAA6S,EAAA3b,GACA2b,EAAA/R,YACA+R,EAAAvP,YACApa,EAAArI,KAAA0I,MAAAmf,WAAAmK,EAAAhxB,OACAmH,EAAAnI,KAAA0I,MAAAif,WAAAtR,IACOmZ,IAEFxvB,MAKLA,KAAA6d,QAAAsT,aACA/kB,EAAA3K,KAAAgxB,EAAA,SAAAT,EAAA3b,GACA,GAAAqc,GAAArc,EAAA,GAAAA,EAAAoc,EAAA3yB,OAAA,EAAAE,KAAA6d,QAAAuT,mBAAA,CACAY,GAAAW,cAAAvmB,EAAAmH,YACAif,EAAAR,EAAAS,EAAApc,GACA2b,EACAO,EAAAP,EAAAS,EAAApc,GACAqc,GAMAV,EAAAW,cAAAze,MAAA7L,EAAArI,KAAA0I,MAAAie,SACAqL,EAAAW,cAAAze,MAAA7L,EAAArI,KAAA0I,MAAAie,SAEAqL,EAAAW,cAAAze,MAAA7L,EAAArI,KAAA0I,MAAAge,aACAsL,EAAAW,cAAAze,MAAA7L,EAAArI,KAAA0I,MAAAge,YAIAsL,EAAAW,cAAA1e,MAAA5L,EAAArI,KAAA0I,MAAAie,SACAqL,EAAAW,cAAA1e,MAAA5L,EAAArI,KAAA0I,MAAAie,SAEAqL,EAAAW,cAAA1e,MAAA5L,EAAArI,KAAA0I,MAAAge,aACAsL,EAAAW,cAAA1e,MAAA5L,EAAArI,KAAA0I,MAAAge,aAEM1mB,MAKN2L,EAAAyX,UAAApjB,KAAA6d,QAAA6T,mBACA/lB,EAAAwX,YAAAnD,EAAAM,YACA3U,EAAA2R,YAEAlR,EAAA3K,KAAAgxB,EAAA,SAAAT,EAAA3b,GACA,OAAAA,EACA1K,EAAA4R,OAAAyU,EAAA7pB,EAAA6pB,EAAA3pB,OAGA,IAAArI,KAAA6d,QAAAsT,YAAA,CACA,GAAA3lB,GAAAgnB,EAAAR,EAAAS,EAAApc,EAEA1K,GAAAinB,cACApnB,EAAAmnB,cAAAze,MAAA/L,EACAqD,EAAAmnB,cAAAze,MAAA7L,EACA2pB,EAAAW,cAAA1e,MAAA9L,EACA6pB,EAAAW,cAAA1e,MAAA5L,EACA2pB,EAAA7pB,EACA6pB,EAAA3pB,OAIAsD,GAAA6R,OAAAwU,EAAA7pB,EAAA6pB,EAAA3pB,IAGKrI,MAEL2L,EAAA0U,SAEArgB,KAAA6d,QAAA8T,aAAAc,EAAA3yB,OAAA,IAEA6L,EAAA6R,OAAAiV,IAAA3yB,OAAA,GAAAqI,EAAAnI,KAAA0I,MAAAie,UACAhb,EAAA6R,OAAAiV,EAAA,GAAAtqB,EAAAnI,KAAA0I,MAAAie,UACAhb,EAAA2X,UAAAtD,EAAAI,UACAzU,EAAA+R,YACA/R,EAAAuU,QAMA9T,EAAA3K,KAAAgxB,EAAA,SAAAT,GACAA,EAAAluB,UAEI9D,UAKHhB,KAAAgB,MAED,WACA,YAEA,IAAAuL,GAAAvL,KACAmG,EAAAoF,EAAApF,MAEAiG,EAAAjG,EAAAiG,QAEAsgB,GAEAmG,wBAAA,EAGAC,mBAAA,yBAGAzlB,kBAAA,EAGA0lB,sBAAA,EAGAC,sBAAA,EAGAC,eAAA,EAGAxD,mBAAA,EAGAC,mBAAA,OAGAC,mBAAA,EAGAljB,eAAA,IAGAC,gBAAA,gBAGAmjB,eAAA,EAGAC,cAAA,EAGAxR,eAAA,kOAIAnY,GAAAyX,KAAA/W,QAEAkb,KAAA,YAEAzV,SAAAogB,EAGA3O,WAAA,SAAAve,GACAQ,KAAAqf,YAEArf,KAAA+vB,WAAA5pB,EAAAod,IAAA1c,QACAsd,WAAAnkB,KAAA6d,QAAA4R,kBACApM,YAAArjB,KAAA6d,QAAA8R,mBACArP,YAAAtgB,KAAA6d,QAAA6R,mBACA/jB,IAAA3L,KAAA8b,MAAAnQ,IACAkY,YAAA,EACA1b,EAAAnI,KAAA8b,MAAAtT,MAAA,EACAH,EAAArI,KAAA8b,MAAArT,OAAA,IAEAzI,KAAA0I,MAAA,GAAAvC,GAAAijB,aACAxG,QAAA5iB,KAAA6d,QAAAlR,UACAgQ,UAAA3c,KAAA6d,QAAArQ,eACAoT,SAAA5gB,KAAA6d,QAAAtQ,cACAqP,WAAA5c,KAAA6d,QAAAvQ,gBACAqe,UAAA3rB,KAAA6d,QAAApQ,eACA2Y,WAAApmB,KAAA6d,QAAA3Q,gBACAse,kBAAAxrB,KAAA6d,QAAAgV,uBACApH,cAAAzrB,KAAA6d,QAAAiV,mBACAxJ,iBAAAtpB,KAAA6d,QAAAkV,sBACArH,iBAAA1rB,KAAA6d,QAAAmV,sBACA5P,UAAApjB,KAAA6d,QAAA,cAAA7d,KAAA6d,QAAA5Q,eAAA,EACA2b,UAAA5oB,KAAA6d,QAAA7Q,eACAwc,SAAA,EACAhhB,MAAAxI,KAAA8b,MAAAtT,MACAC,OAAAzI,KAAA8b,MAAArT,OACAyiB,QAAAlrB,KAAA8b,MAAAtT,MAAA,EACA2iB,QAAAnrB,KAAA8b,MAAArT,OAAA,EACAkD,IAAA3L,KAAA8b,MAAAnQ,IACA+J,eAAA1V,KAAA6d,QAAA1Q,WACAoZ,YAAA/mB,EAAAM,SAGAE,KAAAkzB,iBAAA1zB,GAEAQ,KAAA0I,MAAA6Z,SAEAnW,EAAA3K,KAAAjC,EAAA,SAAA0wB,EAAA7Z,GACArW,KAAAqvB,QAAAa,EAAA7Z,GAAA,IACIrW,MAGJA,KAAA6d,QAAAjQ,cACAxB,EAAAsP,WAAA1b,UAAA6d,QAAA/P,cAAA,SAAAsM,GACA,GAAA4V,GAAA,aAAA5V,EAAA2T,KAAA/tB,KAAAiwB,mBAAA7V,KACAhO,GAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAA7N,SAAA,gBAEAjW,EAAA3K,KAAAuuB,EAAA,SAAAG,GACAA,EAAA/P,UAAA+P,EAAAC,iBAEApwB,KAAA0e,YAAAsR,KAIAhwB,KAAAoe,UAEA6R,mBAAA,SAAA1V,GACA,GAAAgW,MAEAC,EAAApkB,EAAA+N,oBAAAI,EAKA,OAHAnO,GAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAArN,QAAA2N,EAAAroB,EAAAqoB,EAAAnoB,IAAAkoB,EAAA7uB,KAAAwuB,IACIlwB,MACJuwB,GAEAlB,QAAA,SAAAa,EAAAO,EAAAC,GACA,GAAAra,GAAAoa,GAAAzwB,KAAAqf,SAAAvf,MAEAE,MAAAqf,SAAAsR,OAAAta,EAAA,KAAArW,MAAA+vB,YACA3P,UAAA8P,EAAAU,MACAR,eAAAF,EAAAW,WAAAX,EAAAU,MACAtP,MAAA4O,EAAA5O,MACAtgB,MAAAkvB,EAAAlvB,MACA8iB,YAAA9jB,KAAA6d,QAAA,eAAA7d,KAAA0I,MAAA6gB,sBAAA2G,EAAAlvB,OACA8vB,cAAA9wB,KAAA6d,QAAA,gBAAA7d,KAAA0I,MAAAghB,mBACAhG,WAAA,IAAA9R,KAAAa,MAEAie,IACA1wB,KAAAme,SACAne,KAAAuiB,WAGA+M,WAAA,SAAAmB,GACA,GAAAO,GAAA5kB,EAAAmF,SAAAkf,KAAAzwB,KAAAqf,SAAAvf,OAAA,CACAE,MAAAqf,SAAAsR,OAAAK,EAAA,GACAhxB,KAAAme,SACAne,KAAAuiB,UAEA8N,eAAA,SAAA7wB,GACAQ,KAAAJ,MAAA,EACAwM,EAAA3K,KAAAjC,EAAA,SAAA0wB,GACAlwB,KAAAJ,OAAAswB,EAAAlvB,OACIhB,MACJA,KAAA0I,MAAA6d,YAAAvmB,KAAAqf,SAAAvf,QAEAozB,iBAAA,SAAAC,GACA,GAAA3e,KACApI,GAAA3K,KAAA0xB,EAAA,SAAAjD,GACA1b,EAAA9S,KAAAwuB,EAAAlvB,QAGA,IAAAoyB,GAAApzB,KAAA6d,QAAA,eAEApI,MAAAzV,KAAA6d,QAAAhR,WACAyI,UAAAtV,KAAA6d,QAAA/Q,eACA+E,IAAA7R,KAAA6d,QAAA9Q,gBACAlF,IAAA7H,KAAA6d,QAAA9Q,gBAAA/M,KAAA6d,QAAAhR,WAAA7M,KAAA6d,QAAA/Q,gBAEAV,EAAAmI,oBACAC,EACApI,EAAAyF,KAAA7R,KAAA8b,MAAAtT,MAAAxI,KAAA8b,MAAArT,SAAA,EACAzI,KAAA6d,QAAAtQ,cACAvN,KAAA6d,QAAAxQ,iBACArN,KAAA6d,QAAAzQ,kBAGAhB,GAAAvF,OACA7G,KAAA0I,MACA0qB,GAEA/J,KAAAjd,EAAAyF,KAAA7R,KAAA8b,MAAAtT,MAAAxI,KAAA8b,MAAArT,SACAyiB,QAAAlrB,KAAA8b,MAAAtT,MAAA,EACA2iB,QAAAnrB,KAAA8b,MAAArT,OAAA,KAKA8Z,OAAA,WACAviB,KAAAqwB,eAAArwB,KAAAqf,UAEAjT,EAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAA9N,SAGApiB,KAAAme,SACAne,KAAAoe,UAEAD,OAAA,WACA/R,EAAAvF,OAAA7G,KAAA+vB,WAAA1sB,WACA8E,EAAAnI,KAAA8b,MAAAtT,MAAA,EACAH,EAAArI,KAAA8b,MAAArT,OAAA,IAEAzI,KAAAkzB,iBAAAlzB,KAAAqf,UACArf,KAAA0I,MAAA6Z,SAEAnW,EAAAvF,OAAA7G,KAAA0I,OACAwiB,QAAAlrB,KAAA8b,MAAAtT,MAAA,EACA2iB,QAAAnrB,KAAA8b,MAAArT,OAAA,IAGA2D,EAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,GACAA,EAAA3N,QACAuB,YAAA9jB,KAAA0I,MAAA6gB,sBAAA2G,EAAAlvB,UAEIhB,OAGJ8D,KAAA,SAAA4e,GACA,GAAA8M,GAAA9M,GAAA,CAEA1iB,MAAAuc,QACAnQ,EAAA3K,KAAAzB,KAAAqf,SAAA,SAAA6Q,EAAA7Z,GACA6Z,EAAAzN,YACAqO,cAAA9wB,KAAA0I,MAAAghB,mBACA5F,YAAA9jB,KAAA0I,MAAA6gB,sBAAA2G,EAAAlvB,QACKwuB,GAELU,EAAAvM,SAAAuM,EAAAxM,WAAAwM,EAAAY,cAIA,IAAAza,IACA6Z,EAAAxM,WAAA,IAAA9R,KAAAa,IAIA4D,EAAArW,KAAAqf,SAAAvf,OAAA,IACAE,KAAAqf,SAAAhJ,EAAA,GAAAqN,WAAAwM,EAAAvM,UAEAuM,EAAApsB,QACI9D,MACJA,KAAA0I,MAAA5E,WAIC9E,KAAAgB,MACD,WACA,YAEA,IAAAuL,GAAAvL,KACAmG,EAAAoF,EAAApF,MACAiG,EAAAjG,EAAAiG,OAIAjG,GAAAyX,KAAA/W,QACAkb,KAAA,QACAzV,UAEA2mB,eAAA,EAGAI,kBAAA,EAGAnmB,iBAAA,EAGAG,kBAAA,EAGAwe,eAAA,iBAGAD,eAAA,EAGAlB,qBAAA,UAGAD,oBAAA,SAGAH,mBAAA,GAGA0B,oBAAA,OAGAqF,UAAA,EAGAC,eAAA,EAGAC,oBAAA,EAGAC,wBAAA,GAGAC,eAAA,EAGAC,mBAAA,EAGAC,aAAA,EAGArT,eAAA,qOAIAP,WAAA,SAAAve,GACAQ,KAAA4xB,WAAAzrB,EAAAwc,MAAA9b,QACAwc,YAAArjB,KAAA6d,QAAA0T,oBACAlU,OAAArd,KAAA6d,QAAAyT,eACA1O,QAAA5iB,KAAA6d,QAAAwT,SACApO,mBAAAjjB,KAAA6d,QAAA2T,wBACA7lB,IAAA3L,KAAA8b,MAAAnQ,MAGA3L,KAAAgf,YAEAhf,KAAA0uB,WAAAlvB,GAGAQ,KAAA6d,QAAAjQ,cACAxB,EAAAsP,WAAA1b,UAAA6d,QAAA/P,cAAA,SAAAsM,GACA,GAAAkZ,GAAA,aAAAlZ,EAAA2T,KAAA/tB,KAAA8xB,iBAAA1X,KAEApa,MAAA+xB,WAAA,SAAAC,GACAA,EAAA3P,SAAA,8BAEAjW,EAAA3K,KAAA6xB,EAAA,SAAArB,GACAA,EAAA7R,UAAA6R,EAAA7D,cACA6D,EAAA3R,YAAA2R,EAAA5D,kBAGAruB,KAAA0e,YAAA4U,KAKAlnB,EAAA3K,KAAAjC,EAAAwf,SAAA,SAAAgB,GAEA,GAAAuO,IACAjN,MAAAtB,EAAAsB,OAAA,KACAlB,UAAAJ,EAAAI,UACAE,YAAAN,EAAAM,YACA4R,WAAAlS,EAAAkS,WACAC,iBAAAnS,EAAAmS,iBACAhT,UAGAnf,MAAAgf,SAAAtd,KAAA6sB,GAEAniB,EAAA3K,KAAAue,EAAAxgB,KAAA,SAAAgvB,EAAAnY,GAEA,GAAAsT,EACA3pB,MAAA0I,MAAA8D,YACAmd,EAAA3pB,KAAA0I,MAAAiiB,iBAAAtU,EAAArW,KAAA0I,MAAA6gB,sBAAAiF,KAEAD,EAAApP,OAAAzd,KAAA,GAAA1B,MAAA4xB,YACA5wB,MAAAwtB,EACAlN,MAAA9hB,EAAA0hB,OAAA7K,GACAoY,aAAAzO,EAAAsB,MACAnZ,EAAAnI,KAAA6d,QAAA,UAAA7d,KAAA0I,MAAAwiB,QAAAvB,EAAAxhB,EACAE,EAAArI,KAAA6d,QAAA,UAAA7d,KAAA0I,MAAAyiB,QAAAxB,EAAAthB,EACAiY,YAAAN,EAAAmS,iBACA/R,UAAAJ,EAAAkS,WACA9D,cAAApO,EAAAoS,oBAAApS,EAAAkS,WACA7D,gBAAArO,EAAAqS,sBAAArS,EAAAmS,qBAEKnyB,OAEDA,MAEJA,KAAAoe,UAEA2T,WAAA,SAAA3iB,GACAhD,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACA5T,EAAA3K,KAAAue,EAAAb,OAAA/P,EAAApP,OACIA,OAGJ8xB,iBAAA,SAAA1X,GACA,GAAAmZ,GAAAnnB,EAAA+N,oBAAAC,GACAoZ,EAAApnB,EAAAuG,mBACAxK,EAAAnI,KAAA0I,MAAAwiB,QACA7iB,EAAArI,KAAA0I,MAAAyiB,SACKoI,GAELE,EAAA,EAAA7hB,KAAAa,GAAAzS,KAAA0I,MAAA6d,YACAmN,EAAA9hB,KAAA4D,OAAAge,EAAAtgB,MAAA,IAAAtB,KAAAa,IAAAghB,GACAH,IAaA,QAVAI,GAAA1zB,KAAA0I,MAAA6d,aAAAmN,EAAA,KACAA,EAAA,GAGAF,EAAApgB,UAAApT,KAAA0I,MAAAkf,aACAxb,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACAsT,EAAA5xB,KAAAse,EAAAb,OAAAuU,MAIAJ,GAGA5E,WAAA,SAAAlvB,GACAQ,KAAA0I,MAAA,GAAAvC,GAAAijB,aACAxG,QAAA5iB,KAAA6d,QAAAlR,UACAgQ,UAAA3c,KAAA6d,QAAArQ,eACAoT,SAAA5gB,KAAA6d,QAAAtQ,cACAqP,WAAA5c,KAAA6d,QAAAvQ,gBACAqe,UAAA3rB,KAAA6d,QAAApQ,eACA2Y,WAAApmB,KAAA6d,QAAA3Q,gBACAse,kBAAAxrB,KAAA6d,QAAAgV,uBACApH,cAAAzrB,KAAA6d,QAAAiV,mBACAxJ,iBAAAtpB,KAAA6d,QAAAkV,sBACArH,iBAAA1rB,KAAA6d,QAAAmV,sBACA5P,UAAApjB,KAAA6d,QAAA,cAAA7d,KAAA6d,QAAA5Q,eAAA,EACA2b,UAAA5oB,KAAA6d,QAAA7Q,eACA6e,eAAA7rB,KAAA6d,QAAAgO,eACAD,eAAA5rB,KAAA6d,QAAA,iBAAA7d,KAAA6d,QAAA+N,eAAA,EAEAI,oBAAAhsB,KAAA6d,QAAAmO,oBACA1B,mBAAAtqB,KAAA6d,QAAAyM,mBACAI,qBAAA1qB,KAAA6d,QAAA6M,qBACAD,oBAAAzqB,KAAA6d,QAAA4M,oBACAhiB,OAAAzI,KAAA8b,MAAArT,OACAD,MAAAxI,KAAA8b,MAAAtT,MACA0iB,QAAAlrB,KAAA8b,MAAAtT,MAAA,EACA2iB,QAAAnrB,KAAA8b,MAAArT,OAAA,EACAkD,IAAA3L,KAAA8b,MAAAnQ,IACA+J,eAAA1V,KAAA6d,QAAA1Q,WACA+T,OAAA1hB,EAAA0hB,OACAqF,YAAA/mB,EAAAwf,SAAA,GAAAxf,KAAAM,SAGAE,KAAA0I,MAAA+gB,eACAzpB,KAAAkzB,iBAAA1zB,EAAAwf,UACAhf,KAAA0I,MAAAqd,gBAEAmN,iBAAA,SAAAlU,GACA,GAAAxK,GAAA,WACA,GAAAmf,KAWA,OAVAvnB,GAAA3K,KAAAud,EAAA,SAAAgB,GACAA,EAAAxgB,KACAm0B,IAAAnkB,OAAAwQ,EAAAxgB,MAGA4M,EAAA3K,KAAAue,EAAAb,OAAA,SAAA6S,GACA2B,EAAAjyB,KAAAswB,EAAAhxB,WAIA2yB,KAIAP,EAAApzB,KAAA6d,QAAA,eAEApI,MAAAzV,KAAA6d,QAAAhR,WACAyI,UAAAtV,KAAA6d,QAAA/Q,eACA+E,IAAA7R,KAAA6d,QAAA9Q,gBACAlF,IAAA7H,KAAA6d,QAAA9Q,gBAAA/M,KAAA6d,QAAAhR,WAAA7M,KAAA6d,QAAA/Q,gBAEAV,EAAAmI,oBACAC,EACApI,EAAAyF,KAAA7R,KAAA8b,MAAAtT,MAAAxI,KAAA8b,MAAArT,SAAA,EACAzI,KAAA6d,QAAAtQ,cACAvN,KAAA6d,QAAAxQ,iBACArN,KAAA6d,QAAAzQ,kBAGAhB,GAAAvF,OACA7G,KAAA0I,MACA0qB,IAIA/D,QAAA,SAAA7a,EAAA8M,GAEAthB,KAAA0I,MAAA6d,cACAna,EAAA3K,KAAA+S,EAAA,SAAAxT,EAAAusB,GACA,GAAA5D,GAAA3pB,KAAA0I,MAAAiiB,iBAAA3qB,KAAA0I,MAAA6d,YAAAvmB,KAAA0I,MAAA6gB,sBAAAvoB,GACAhB,MAAAgf,SAAAuO,GAAApO,OAAAzd,KAAA,GAAA1B,MAAA4xB,YACA5wB,QACAsgB,QACAnZ,EAAAwhB,EAAAxhB,EACAE,EAAAshB,EAAAthB,EACAiY,YAAAtgB,KAAAgf,SAAAuO,GAAA4E,iBACA/R,UAAApgB,KAAAgf,SAAAuO,GAAA2E,eAEIlyB,MAEJA,KAAA0I,MAAAwY,OAAAxf,KAAA4f,GAEAthB,KAAAme,SAEAne,KAAAuiB,UAEA+M,WAAA,WACAtvB,KAAA0I,MAAA6d,cACAvmB,KAAA0I,MAAAwY,OAAAuF,QACAra,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GACAA,EAAAb,OAAAsH,SACIzmB,MACJA,KAAAme,SACAne,KAAAuiB,UAEAA,OAAA,WACAviB,KAAA+xB,WAAA,SAAAC,GACAA,EAAA5P,SAEApiB,KAAAme,SACAne,KAAAoe,UAEAD,OAAA,WACA/R,EAAAvF,OAAA7G,KAAA0I,OACAF,MAAAxI,KAAA8b,MAAAtT,MACAC,OAAAzI,KAAA8b,MAAArT,OACA4gB,KAAAjd,EAAAyF,KAAA7R,KAAA8b,MAAAtT,MAAAxI,KAAA8b,MAAArT,SACAyiB,QAAAlrB,KAAA8b,MAAAtT,MAAA,EACA2iB,QAAAnrB,KAAA8b,MAAArT,OAAA,IAEAzI,KAAAkzB,iBAAAlzB,KAAAgf,UACAhf,KAAA0I,MAAA+gB,eACAzpB,KAAA0I,MAAAqd,gBAEAjiB,KAAA,SAAA4e,GACA,GAAAxI,GAAAwI,GAAA,EACA/W,EAAA3L,KAAA8b,MAAAnQ,GACA3L,MAAAuc,QACAvc,KAAA0I,MAAA5E,OAEAsI,EAAA3K,KAAAzB,KAAAgf,SAAA,SAAAgB,GAGA5T,EAAA3K,KAAAue,EAAAb,OAAA,SAAA6S,EAAA3b,GACA2b,EAAA/R,YACA+R,EAAAvP,WAAAziB,KAAA0I,MAAAiiB,iBAAAtU,EAAArW,KAAA0I,MAAA6gB,sBAAAyI,EAAAhxB,QAAAkZ,IAEKla,MAKL2L,EAAAyX,UAAApjB,KAAA6d,QAAA6T,mBACA/lB,EAAAwX,YAAAnD,EAAAM,YACA3U,EAAA2R,YACAlR,EAAA3K,KAAAue,EAAAb,OAAA,SAAA6S,EAAA3b,GACA,IAAAA,EACA1K,EAAA4R,OAAAyU,EAAA7pB,EAAA6pB,EAAA3pB,GAGAsD,EAAA6R,OAAAwU,EAAA7pB,EAAA6pB,EAAA3pB,IAEKrI,MACL2L,EAAA+R,YACA/R,EAAA0U,SAEA1U,EAAA2X,UAAAtD,EAAAI,UACAzU,EAAAuU,OAKA9T,EAAA3K,KAAAue,EAAAb,OAAA,SAAA6S,GACAA,EAAA/R,YACA+R,EAAAluB,UAII9D,UAUHhB,KAAAgB,SNmlBE","file":"graphs.afd82fd479c3fd76ce94.bundle.js","sourcesContent":["webpackJsonp([20],{\n\n/***/ \"2tW8\":\n/***/ (function(module, exports) {\n\n/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }),\n\n/***/ \"5Zgr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* eslint-disable func-names, space-before-function-paren, object-shorthand, no-var, one-var, camelcase, one-var-declaration-per-line, comma-dangle, no-param-reassign, no-return-assign, quotes, prefer-arrow-callback, wrap-iife, consistent-return, no-unused-vars, max-len, no-cond-assign, no-else-return, max-len */\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  parse_log: function parse_log(log) {\n    var by_author, by_email, data, entry, i, len, total, normalized_email;\n    total = {};\n    by_author = {};\n    by_email = {};\n    for (i = 0, len = log.length; i < len; i += 1) {\n      entry = log[i];\n      if (total[entry.date] == null) {\n        this.add_date(entry.date, total);\n      }\n      normalized_email = entry.author_email.toLowerCase();\n      data = by_author[entry.author_name] || by_email[normalized_email];\n      if (data == null) {\n        data = this.add_author(entry, by_author, by_email);\n      }\n      if (!data[entry.date]) {\n        this.add_date(entry.date, data);\n      }\n      this.store_data(entry, total[entry.date], data[entry.date]);\n    }\n    total = _.toArray(total);\n    by_author = _.toArray(by_author);\n    return {\n      total: total,\n      by_author: by_author\n    };\n  },\n  add_date: function add_date(date, collection) {\n    collection[date] = {};\n    return collection[date].date = date;\n  },\n  add_author: function add_author(author, by_author, by_email) {\n    var data, normalized_email;\n    data = {};\n    data.author_name = author.author_name;\n    data.author_email = author.author_email;\n    normalized_email = author.author_email.toLowerCase();\n    by_author[author.author_name] = data;\n    by_email[normalized_email] = data;\n    return data;\n  },\n  store_data: function store_data(entry, total, by_author) {\n    this.store_commits(total, by_author);\n    this.store_additions(entry, total, by_author);\n    return this.store_deletions(entry, total, by_author);\n  },\n  store_commits: function store_commits(total, by_author) {\n    this.add(total, \"commits\", 1);\n    return this.add(by_author, \"commits\", 1);\n  },\n  add: function add(collection, field, value) {\n    if (collection[field] == null) {\n      collection[field] = 0;\n    }\n    return collection[field] += value;\n  },\n  store_additions: function store_additions(entry, total, by_author) {\n    if (entry.additions == null) {\n      entry.additions = 0;\n    }\n    this.add(total, \"additions\", entry.additions);\n    return this.add(by_author, \"additions\", entry.additions);\n  },\n  store_deletions: function store_deletions(entry, total, by_author) {\n    if (entry.deletions == null) {\n      entry.deletions = 0;\n    }\n    this.add(total, \"deletions\", entry.deletions);\n    return this.add(by_author, \"deletions\", entry.deletions);\n  },\n  get_total_data: function get_total_data(parsed_log, field) {\n    var log, total_data;\n    log = parsed_log.total;\n    total_data = this.pick_field(log, field);\n    return _.sortBy(total_data, function (d) {\n      return d.date;\n    });\n  },\n  pick_field: function pick_field(log, field) {\n    var total_data;\n    total_data = [];\n    _.each(log, function (d) {\n      return total_data.push(_.pick(d, [field, 'date']));\n    });\n    return total_data;\n  },\n  get_author_data: function get_author_data(parsed_log, field, date_range) {\n    var author_data, log;\n    if (date_range == null) {\n      date_range = null;\n    }\n    log = parsed_log.by_author;\n    author_data = [];\n    _.each(log, function (_this) {\n      return function (log_entry) {\n        var parsed_log_entry;\n        parsed_log_entry = _this.parse_log_entry(log_entry, field, date_range);\n        if (!_.isEmpty(parsed_log_entry.dates)) {\n          return author_data.push(parsed_log_entry);\n        }\n      };\n    }(this));\n    return _.sortBy(author_data, function (d) {\n      return d[field];\n    }).reverse();\n  },\n  parse_log_entry: function parse_log_entry(log_entry, field, date_range) {\n    var parsed_entry;\n    parsed_entry = {};\n    parsed_entry.author_name = log_entry.author_name;\n    parsed_entry.author_email = log_entry.author_email;\n    parsed_entry.dates = {};\n    parsed_entry.commits = parsed_entry.additions = parsed_entry.deletions = 0;\n    _.each(_.omit(log_entry, 'author_name', 'author_email'), function (_this) {\n      return function (value, key) {\n        if (_this.in_range(value.date, date_range)) {\n          parsed_entry.dates[value.date] = value[field];\n          parsed_entry.commits += value.commits;\n          parsed_entry.additions += value.additions;\n          return parsed_entry.deletions += value.deletions;\n        }\n      };\n    }(this));\n    return parsed_entry;\n  },\n  in_range: function in_range(date, date_range) {\n    var ref;\n    if (date_range === null || date_range[0] <= (ref = new Date(date)) && ref <= date_range[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n});\n\n/***/ }),\n\n/***/ \"HIFr\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(\"+3IL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__ = __webpack_require__(\"U+v5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__ = __webpack_require__(\"5Zgr\");\n/* eslint-disable func-names, space-before-function-paren, wrap-iife, no-var, one-var, camelcase, one-var-declaration-per-line, quotes, no-param-reassign, quote-props, comma-dangle, prefer-template, max-len, no-return-assign, no-shadow */\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ((function () {\n  function ContributorsStatGraph() {}\n\n  ContributorsStatGraph.prototype.init = function (log) {\n    var author_commits, total_commits;\n    this.parsed_log = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].parse_log(log);\n    this.set_current_field(\"commits\");\n    total_commits = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_total_data(this.parsed_log, this.field);\n    author_commits = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_author_data(this.parsed_log, this.field);\n    this.add_master_graph(total_commits);\n    this.add_authors_graph(author_commits);\n    return this.change_date_header();\n  };\n\n  ContributorsStatGraph.prototype.add_master_graph = function (total_data) {\n    this.master_graph = new __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"a\" /* ContributorsMasterGraph */](total_data);\n    return this.master_graph.draw();\n  };\n\n  ContributorsStatGraph.prototype.add_authors_graph = function (author_data) {\n    var limited_author_data;\n    this.authors = [];\n    limited_author_data = author_data.slice(0, 100);\n    return _.each(limited_author_data, function (_this) {\n      return function (d) {\n        var author_graph, author_header;\n        author_header = _this.create_author_header(d);\n        $(\".contributors-list\").append(author_header);\n        _this.authors[d.author_name] = author_graph = new __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"b\" /* ContributorsAuthorGraph */](d.dates);\n        return author_graph.draw();\n      };\n    }(this));\n  };\n\n  ContributorsStatGraph.prototype.format_author_commit_info = function (author) {\n    var commits;\n    commits = $('<span/>', {\n      \"class\": 'graph-author-commits-count'\n    });\n    commits.text(author.commits + \" commits\");\n    return $('<span/>').append(commits);\n  };\n\n  ContributorsStatGraph.prototype.create_author_header = function (author) {\n    var author_commit_info, author_commit_info_span, author_email, author_name, list_item;\n    list_item = $('<li/>', {\n      \"class\": 'person',\n      style: 'display: block;'\n    });\n    author_name = $('<h4>' + author.author_name + '</h4>');\n    author_email = $('<p class=\"graph-author-email\">' + author.author_email + '</p>');\n    author_commit_info_span = $('<span/>', {\n      \"class\": 'commits'\n    });\n    author_commit_info = this.format_author_commit_info(author);\n    author_commit_info_span.html(author_commit_info);\n    list_item.append(author_name);\n    list_item.append(author_email);\n    list_item.append(author_commit_info_span);\n    return list_item;\n  };\n\n  ContributorsStatGraph.prototype.redraw_master = function () {\n    var total_data;\n    total_data = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_total_data(this.parsed_log, this.field);\n    this.master_graph.set_data(total_data);\n    return this.master_graph.redraw();\n  };\n\n  ContributorsStatGraph.prototype.redraw_authors = function () {\n    var author_commits, x_domain;\n    $(\"ol\").html(\"\");\n    x_domain = __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"c\" /* ContributorsGraph */].prototype.x_domain;\n    author_commits = __WEBPACK_IMPORTED_MODULE_2__stat_graph_contributors_util__[\"a\" /* default */].get_author_data(this.parsed_log, this.field, x_domain);\n    return _.each(author_commits, function (_this) {\n      return function (d) {\n        _this.redraw_author_commit_info(d);\n        $(_this.authors[d.author_name].list_item).appendTo(\"ol\");\n        _this.authors[d.author_name].set_data(d.dates);\n        return _this.authors[d.author_name].redraw();\n      };\n    }(this));\n  };\n\n  ContributorsStatGraph.prototype.set_current_field = function (field) {\n    return this.field = field;\n  };\n\n  ContributorsStatGraph.prototype.change_date_header = function () {\n    var print, print_date_format, x_domain;\n    x_domain = __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors_graph__[\"c\" /* ContributorsGraph */].prototype.x_domain;\n    print_date_format = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.format(\"%B %e %Y\");\n    print = print_date_format(x_domain[0]) + \" - \" + print_date_format(x_domain[1]);\n    return $(\"#date_header\").text(print);\n  };\n\n  ContributorsStatGraph.prototype.redraw_author_commit_info = function (author) {\n    var author_commit_info, author_list_item;\n    author_list_item = $(this.authors[author.author_name].list_item);\n    author_commit_info = this.format_author_commit_info(author);\n    return author_list_item.find(\"span\").html(author_commit_info);\n  };\n\n  return ContributorsStatGraph;\n})());\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"Jktd\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vendor_Chart__ = __webpack_require__(\"syvU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vendor_Chart___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vendor_Chart__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors__ = __webpack_require__(\"HIFr\");\n\n\n\n// export to global scope\nwindow.Chart = __WEBPACK_IMPORTED_MODULE_0_vendor_Chart___default.a;\nwindow.ContributorsStatGraph = __WEBPACK_IMPORTED_MODULE_1__stat_graph_contributors__[\"a\" /* default */];\n\n/***/ }),\n\n/***/ \"U+v5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function($) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3__ = __webpack_require__(\"+3IL\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_d3__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return ContributorsGraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ContributorsMasterGraph; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ContributorsAuthorGraph; });\n/* eslint-disable func-names, space-before-function-paren, no-var, prefer-rest-params, max-len, no-restricted-syntax, vars-on-top, no-use-before-define, no-param-reassign, new-cap, no-underscore-dangle, wrap-iife, comma-dangle, no-return-assign, prefer-arrow-callback, quotes, prefer-template, newline-per-chained-call, no-else-return, no-shadow */\n\n\n\nvar bind = function bind(fn, me) {\n  return function () {\n    return fn.apply(me, arguments);\n  };\n};\nvar extend = function extend(child, parent) {\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) child[key] = parent[key];\n  }function ctor() {\n    this.constructor = child;\n  }ctor.prototype = parent.prototype;child.prototype = new ctor();child.__super__ = parent.prototype;return child;\n};\nvar hasProp = {}.hasOwnProperty;\n\nvar ContributorsGraph = function () {\n  function ContributorsGraph() {}\n\n  ContributorsGraph.prototype.MARGIN = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  };\n\n  ContributorsGraph.prototype.x_domain = null;\n\n  ContributorsGraph.prototype.y_domain = null;\n\n  ContributorsGraph.prototype.dates = [];\n\n  ContributorsGraph.set_x_domain = function (data) {\n    return ContributorsGraph.prototype.x_domain = data;\n  };\n\n  ContributorsGraph.set_y_domain = function (data) {\n    return ContributorsGraph.prototype.y_domain = [0, __WEBPACK_IMPORTED_MODULE_0_d3___default.a.max(data, function (d) {\n      return d.commits = d.commits || d.additions || d.deletions;\n    })];\n  };\n\n  ContributorsGraph.init_x_domain = function (data) {\n    return ContributorsGraph.prototype.x_domain = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.extent(data, function (d) {\n      return d.date;\n    });\n  };\n\n  ContributorsGraph.init_y_domain = function (data) {\n    return ContributorsGraph.prototype.y_domain = [0, __WEBPACK_IMPORTED_MODULE_0_d3___default.a.max(data, function (d) {\n      return d.commits = d.commits || d.additions || d.deletions;\n    })];\n  };\n\n  ContributorsGraph.init_domain = function (data) {\n    ContributorsGraph.init_x_domain(data);\n    return ContributorsGraph.init_y_domain(data);\n  };\n\n  ContributorsGraph.set_dates = function (data) {\n    return ContributorsGraph.prototype.dates = data;\n  };\n\n  ContributorsGraph.prototype.set_x_domain = function () {\n    return this.x.domain(this.x_domain);\n  };\n\n  ContributorsGraph.prototype.set_y_domain = function () {\n    return this.y.domain(this.y_domain);\n  };\n\n  ContributorsGraph.prototype.set_domain = function () {\n    this.set_x_domain();\n    return this.set_y_domain();\n  };\n\n  ContributorsGraph.prototype.create_scale = function (width, height) {\n    this.x = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.scale().range([0, width]).clamp(true);\n    return this.y = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.scale.linear().range([height, 0]).nice();\n  };\n\n  ContributorsGraph.prototype.draw_x_axis = function () {\n    return this.svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0, \" + this.height + \")\").call(this.x_axis);\n  };\n\n  ContributorsGraph.prototype.draw_y_axis = function () {\n    return this.svg.append(\"g\").attr(\"class\", \"y axis\").call(this.y_axis);\n  };\n\n  ContributorsGraph.prototype.set_data = function (data) {\n    return this.data = data;\n  };\n\n  return ContributorsGraph;\n}();\n\nvar ContributorsMasterGraph = function (superClass) {\n  extend(ContributorsMasterGraph, superClass);\n\n  function ContributorsMasterGraph(data1) {\n    this.data = data1;\n    this.update_content = bind(this.update_content, this);\n    this.width = $('.content').width() - 70;\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.brush = null;\n    this.x_max_domain = null;\n  }\n\n  ContributorsMasterGraph.prototype.process_dates = function (data) {\n    var dates;\n    dates = this.get_dates(data);\n    this.parse_dates(data);\n    return ContributorsGraph.set_dates(dates);\n  };\n\n  ContributorsMasterGraph.prototype.get_dates = function (data) {\n    return _.pluck(data, 'date');\n  };\n\n  ContributorsMasterGraph.prototype.parse_dates = function (data) {\n    var parseDate;\n    parseDate = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.format(\"%Y-%m-%d\").parse;\n    return data.forEach(function (d) {\n      return d.date = parseDate(d.date);\n    });\n  };\n\n  ContributorsMasterGraph.prototype.create_scale = function () {\n    return ContributorsMasterGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsMasterGraph.prototype.create_axes = function () {\n    this.x_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.x).orient(\"bottom\");\n    return this.y_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsMasterGraph.prototype.create_svg = function () {\n    return this.svg = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(\"#contributors-master\").append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"tint-box\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsMasterGraph.prototype.create_area = function (x, y) {\n    return this.area = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.area().x(function (d) {\n      return x(d.date);\n    }).y0(this.height).y1(function (d) {\n      d.commits = d.commits || d.additions || d.deletions;\n      return y(d.commits);\n    }).interpolate(\"basis\");\n  };\n\n  ContributorsMasterGraph.prototype.create_brush = function () {\n    return this.brush = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.brush().x(this.x).on(\"brushend\", this.update_content);\n  };\n\n  ContributorsMasterGraph.prototype.draw_path = function (data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area\").attr(\"d\", this.area);\n  };\n\n  ContributorsMasterGraph.prototype.add_brush = function () {\n    return this.svg.append(\"g\").attr(\"class\", \"selection\").call(this.brush).selectAll(\"rect\").attr(\"height\", this.height);\n  };\n\n  ContributorsMasterGraph.prototype.update_content = function () {\n    ContributorsGraph.set_x_domain(this.brush.empty() ? this.x_max_domain : this.brush.extent());\n    return $(\"#brush_change\").trigger('change');\n  };\n\n  ContributorsMasterGraph.prototype.draw = function () {\n    this.process_dates(this.data);\n    this.create_scale();\n    this.create_axes();\n    ContributorsGraph.init_domain(this.data);\n    this.x_max_domain = this.x_domain;\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.create_brush();\n    this.draw_path(this.data);\n    this.draw_x_axis();\n    this.draw_y_axis();\n    return this.add_brush();\n  };\n\n  ContributorsMasterGraph.prototype.redraw = function () {\n    this.process_dates(this.data);\n    ContributorsGraph.set_y_domain(this.data);\n    this.set_y_domain();\n    this.svg.select(\"path\").datum(this.data);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsMasterGraph;\n}(ContributorsGraph);\n\nvar ContributorsAuthorGraph = function (superClass) {\n  extend(ContributorsAuthorGraph, superClass);\n\n  function ContributorsAuthorGraph(data1) {\n    this.data = data1;\n    // Don't split graph size in half for mobile devices.\n    if ($(window).width() < 768) {\n      this.width = $('.content').width() - 80;\n    } else {\n      this.width = $('.content').width() / 2 - 100;\n    }\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.list_item = null;\n  }\n\n  ContributorsAuthorGraph.prototype.create_scale = function () {\n    return ContributorsAuthorGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsAuthorGraph.prototype.create_axes = function () {\n    this.x_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.x).orient(\"bottom\").ticks(8);\n    return this.y_axis = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsAuthorGraph.prototype.create_area = function (x, y) {\n    return this.area = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.svg.area().x(function (d) {\n      var parseDate;\n      parseDate = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.time.format(\"%Y-%m-%d\").parse;\n      return x(parseDate(d));\n    }).y0(this.height).y1(function (_this) {\n      return function (d) {\n        if (_this.data[d] != null) {\n          return y(_this.data[d]);\n        } else {\n          return y(0);\n        }\n      };\n    }(this)).interpolate(\"basis\");\n  };\n\n  ContributorsAuthorGraph.prototype.create_svg = function () {\n    this.list_item = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.selectAll(\".person\")[0].pop();\n    return this.svg = __WEBPACK_IMPORTED_MODULE_0_d3___default.a.select(this.list_item).append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"spark\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsAuthorGraph.prototype.draw_path = function (data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area-contributor\").attr(\"d\", this.area);\n  };\n\n  ContributorsAuthorGraph.prototype.draw = function () {\n    this.create_scale();\n    this.create_axes();\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.draw_path(this.dates);\n    this.draw_x_axis();\n    return this.draw_y_axis();\n  };\n\n  ContributorsAuthorGraph.prototype.redraw = function () {\n    this.set_domain();\n    this.svg.select(\"path\").datum(this.dates);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    this.svg.select(\".x.axis\").call(this.x_axis);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsAuthorGraph;\n}(ContributorsGraph);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(\"lwLq\")))\n\n/***/ }),\n\n/***/ \"syvU\":\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.0.2\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t}\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width');\n\t\tvar height = this.height = computeDimension(context.canvas,'Height');\n\n\t\t// Firefox requires this to work correctly\n\t\tcontext.canvas.width  = width;\n\t\tcontext.canvas.height = height;\n\n\t\tvar width = this.width = context.canvas.width;\n\t\tvar height = this.height = context.canvas.height;\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)) objClone[key] = value;\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)) base[key] = value;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn == \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (\"function\" == 'function' && __webpack_require__(\"2tW8\")),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\treturn num.toString().split(\".\")[1].length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\tvar maxValue = max(valuesArray),\n\t\t\t\tminValue = min(valuesArray);\n\n\t\t\t// We need some degree of seperation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (labelTemplateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t;\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t;\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif (t === 1) return 1;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1) return t;\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1 / 2) == 2) return 1;\n\t\t\t\tif (!p) p = 1 * (0.3 * 1.5);\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2) return easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientWidth;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientHeight;\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tcancelAnimFrame(this.animationFrame);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\thelpers.animationLoop(\n\t\t\t\t\tthis.draw,\n\t\t\t\t\tthis.options.animationSteps,\n\t\t\t\t\tthis.options.animationEasing,\n\t\t\t\t\tthis.options.onAnimationProgress,\n\t\t\t\t\tthis.options.onAnimationComplete,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn template(this.options.legendTemplate,this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: ChartElements[0].label,\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n\t\t\t\twithinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle);\n\n\t\t\tctx.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleFontSize *1.5;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleFontSize/2;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize*1.5*afterTitleIndex) + this.fontSize/2) + this.titleFontSize * 1.5;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth + 10) ? firstWidth/2 : this.yLabelWidth + 10;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth + 8){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (this.angleLineWidth > 0){\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max));\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function(){\n\t\t\treturn Chart;\n\t\t}.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : dataset.highlightFill || dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : dataset.highlightStroke || dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value){\n\t\t\treturn (Math.PI*2)*(Math.abs(value) / this.total);\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tctx.stroke();\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segement.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tctx.fill();\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n\n/***/ })\n\n},[\"Jktd\"]);\n\n\n// WEBPACK FOOTER //\n// graphs.afd82fd479c3fd76ce94.bundle.js","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/amd-options.js\n// module id = 2tW8\n// module chunks = 20","/* eslint-disable func-names, space-before-function-paren, object-shorthand, no-var, one-var, camelcase, one-var-declaration-per-line, comma-dangle, no-param-reassign, no-return-assign, quotes, prefer-arrow-callback, wrap-iife, consistent-return, no-unused-vars, max-len, no-cond-assign, no-else-return, max-len */\n\nexport default {\n  parse_log: function(log) {\n    var by_author, by_email, data, entry, i, len, total, normalized_email;\n    total = {};\n    by_author = {};\n    by_email = {};\n    for (i = 0, len = log.length; i < len; i += 1) {\n      entry = log[i];\n      if (total[entry.date] == null) {\n        this.add_date(entry.date, total);\n      }\n      normalized_email = entry.author_email.toLowerCase();\n      data = by_author[entry.author_name] || by_email[normalized_email];\n      if (data == null) {\n        data = this.add_author(entry, by_author, by_email);\n      }\n      if (!data[entry.date]) {\n        this.add_date(entry.date, data);\n      }\n      this.store_data(entry, total[entry.date], data[entry.date]);\n    }\n    total = _.toArray(total);\n    by_author = _.toArray(by_author);\n    return {\n      total: total,\n      by_author: by_author\n    };\n  },\n  add_date: function(date, collection) {\n    collection[date] = {};\n    return collection[date].date = date;\n  },\n  add_author: function(author, by_author, by_email) {\n    var data, normalized_email;\n    data = {};\n    data.author_name = author.author_name;\n    data.author_email = author.author_email;\n    normalized_email = author.author_email.toLowerCase();\n    by_author[author.author_name] = data;\n    by_email[normalized_email] = data;\n    return data;\n  },\n  store_data: function(entry, total, by_author) {\n    this.store_commits(total, by_author);\n    this.store_additions(entry, total, by_author);\n    return this.store_deletions(entry, total, by_author);\n  },\n  store_commits: function(total, by_author) {\n    this.add(total, \"commits\", 1);\n    return this.add(by_author, \"commits\", 1);\n  },\n  add: function(collection, field, value) {\n    if (collection[field] == null) {\n      collection[field] = 0;\n    }\n    return collection[field] += value;\n  },\n  store_additions: function(entry, total, by_author) {\n    if (entry.additions == null) {\n      entry.additions = 0;\n    }\n    this.add(total, \"additions\", entry.additions);\n    return this.add(by_author, \"additions\", entry.additions);\n  },\n  store_deletions: function(entry, total, by_author) {\n    if (entry.deletions == null) {\n      entry.deletions = 0;\n    }\n    this.add(total, \"deletions\", entry.deletions);\n    return this.add(by_author, \"deletions\", entry.deletions);\n  },\n  get_total_data: function(parsed_log, field) {\n    var log, total_data;\n    log = parsed_log.total;\n    total_data = this.pick_field(log, field);\n    return _.sortBy(total_data, function(d) {\n      return d.date;\n    });\n  },\n  pick_field: function(log, field) {\n    var total_data;\n    total_data = [];\n    _.each(log, function(d) {\n      return total_data.push(_.pick(d, [field, 'date']));\n    });\n    return total_data;\n  },\n  get_author_data: function(parsed_log, field, date_range) {\n    var author_data, log;\n    if (date_range == null) {\n      date_range = null;\n    }\n    log = parsed_log.by_author;\n    author_data = [];\n    _.each(log, (function(_this) {\n      return function(log_entry) {\n        var parsed_log_entry;\n        parsed_log_entry = _this.parse_log_entry(log_entry, field, date_range);\n        if (!_.isEmpty(parsed_log_entry.dates)) {\n          return author_data.push(parsed_log_entry);\n        }\n      };\n    })(this));\n    return _.sortBy(author_data, function(d) {\n      return d[field];\n    }).reverse();\n  },\n  parse_log_entry: function(log_entry, field, date_range) {\n    var parsed_entry;\n    parsed_entry = {};\n    parsed_entry.author_name = log_entry.author_name;\n    parsed_entry.author_email = log_entry.author_email;\n    parsed_entry.dates = {};\n    parsed_entry.commits = parsed_entry.additions = parsed_entry.deletions = 0;\n    _.each(_.omit(log_entry, 'author_name', 'author_email'), (function(_this) {\n      return function(value, key) {\n        if (_this.in_range(value.date, date_range)) {\n          parsed_entry.dates[value.date] = value[field];\n          parsed_entry.commits += value.commits;\n          parsed_entry.additions += value.additions;\n          return parsed_entry.deletions += value.deletions;\n        }\n      };\n    })(this));\n    return parsed_entry;\n  },\n  in_range: function(date, date_range) {\n    var ref;\n    if (date_range === null || (date_range[0] <= (ref = new Date(date)) && ref <= date_range[1])) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/stat_graph_contributors_util.js","/* eslint-disable func-names, space-before-function-paren, wrap-iife, no-var, one-var, camelcase, one-var-declaration-per-line, quotes, no-param-reassign, quote-props, comma-dangle, prefer-template, max-len, no-return-assign, no-shadow */\n\nimport d3 from 'd3';\nimport { ContributorsGraph, ContributorsAuthorGraph, ContributorsMasterGraph } from './stat_graph_contributors_graph';\nimport ContributorsStatGraphUtil from './stat_graph_contributors_util';\n\nexport default (function() {\n  function ContributorsStatGraph() {}\n\n  ContributorsStatGraph.prototype.init = function(log) {\n    var author_commits, total_commits;\n    this.parsed_log = ContributorsStatGraphUtil.parse_log(log);\n    this.set_current_field(\"commits\");\n    total_commits = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field);\n    author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field);\n    this.add_master_graph(total_commits);\n    this.add_authors_graph(author_commits);\n    return this.change_date_header();\n  };\n\n  ContributorsStatGraph.prototype.add_master_graph = function(total_data) {\n    this.master_graph = new ContributorsMasterGraph(total_data);\n    return this.master_graph.draw();\n  };\n\n  ContributorsStatGraph.prototype.add_authors_graph = function(author_data) {\n    var limited_author_data;\n    this.authors = [];\n    limited_author_data = author_data.slice(0, 100);\n    return _.each(limited_author_data, (function(_this) {\n      return function(d) {\n        var author_graph, author_header;\n        author_header = _this.create_author_header(d);\n        $(\".contributors-list\").append(author_header);\n        _this.authors[d.author_name] = author_graph = new ContributorsAuthorGraph(d.dates);\n        return author_graph.draw();\n      };\n    })(this));\n  };\n\n  ContributorsStatGraph.prototype.format_author_commit_info = function(author) {\n    var commits;\n    commits = $('<span/>', {\n      \"class\": 'graph-author-commits-count'\n    });\n    commits.text(author.commits + \" commits\");\n    return $('<span/>').append(commits);\n  };\n\n  ContributorsStatGraph.prototype.create_author_header = function(author) {\n    var author_commit_info, author_commit_info_span, author_email, author_name, list_item;\n    list_item = $('<li/>', {\n      \"class\": 'person',\n      style: 'display: block;'\n    });\n    author_name = $('<h4>' + author.author_name + '</h4>');\n    author_email = $('<p class=\"graph-author-email\">' + author.author_email + '</p>');\n    author_commit_info_span = $('<span/>', {\n      \"class\": 'commits'\n    });\n    author_commit_info = this.format_author_commit_info(author);\n    author_commit_info_span.html(author_commit_info);\n    list_item.append(author_name);\n    list_item.append(author_email);\n    list_item.append(author_commit_info_span);\n    return list_item;\n  };\n\n  ContributorsStatGraph.prototype.redraw_master = function() {\n    var total_data;\n    total_data = ContributorsStatGraphUtil.get_total_data(this.parsed_log, this.field);\n    this.master_graph.set_data(total_data);\n    return this.master_graph.redraw();\n  };\n\n  ContributorsStatGraph.prototype.redraw_authors = function() {\n    var author_commits, x_domain;\n    $(\"ol\").html(\"\");\n    x_domain = ContributorsGraph.prototype.x_domain;\n    author_commits = ContributorsStatGraphUtil.get_author_data(this.parsed_log, this.field, x_domain);\n    return _.each(author_commits, (function(_this) {\n      return function(d) {\n        _this.redraw_author_commit_info(d);\n        $(_this.authors[d.author_name].list_item).appendTo(\"ol\");\n        _this.authors[d.author_name].set_data(d.dates);\n        return _this.authors[d.author_name].redraw();\n      };\n    })(this));\n  };\n\n  ContributorsStatGraph.prototype.set_current_field = function(field) {\n    return this.field = field;\n  };\n\n  ContributorsStatGraph.prototype.change_date_header = function() {\n    var print, print_date_format, x_domain;\n    x_domain = ContributorsGraph.prototype.x_domain;\n    print_date_format = d3.time.format(\"%B %e %Y\");\n    print = print_date_format(x_domain[0]) + \" - \" + print_date_format(x_domain[1]);\n    return $(\"#date_header\").text(print);\n  };\n\n  ContributorsStatGraph.prototype.redraw_author_commit_info = function(author) {\n    var author_commit_info, author_list_item;\n    author_list_item = $(this.authors[author.author_name].list_item);\n    author_commit_info = this.format_author_commit_info(author);\n    return author_list_item.find(\"span\").html(author_commit_info);\n  };\n\n  return ContributorsStatGraph;\n})();\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/stat_graph_contributors.js","import Chart from 'vendor/Chart';\nimport ContributorsStatGraph from './stat_graph_contributors';\n\n// export to global scope\nwindow.Chart = Chart;\nwindow.ContributorsStatGraph = ContributorsStatGraph;\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/graphs_bundle.js","/* eslint-disable func-names, space-before-function-paren, no-var, prefer-rest-params, max-len, no-restricted-syntax, vars-on-top, no-use-before-define, no-param-reassign, new-cap, no-underscore-dangle, wrap-iife, comma-dangle, no-return-assign, prefer-arrow-callback, quotes, prefer-template, newline-per-chained-call, no-else-return, no-shadow */\n\nimport d3 from 'd3';\n\nconst bind = function(fn, me) { return function() { return fn.apply(me, arguments); }; };\nconst extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\nconst hasProp = {}.hasOwnProperty;\n\nexport const ContributorsGraph = (function() {\n  function ContributorsGraph() {}\n\n  ContributorsGraph.prototype.MARGIN = {\n    top: 20,\n    right: 20,\n    bottom: 30,\n    left: 50\n  };\n\n  ContributorsGraph.prototype.x_domain = null;\n\n  ContributorsGraph.prototype.y_domain = null;\n\n  ContributorsGraph.prototype.dates = [];\n\n  ContributorsGraph.set_x_domain = function(data) {\n    return ContributorsGraph.prototype.x_domain = data;\n  };\n\n  ContributorsGraph.set_y_domain = function(data) {\n    return ContributorsGraph.prototype.y_domain = [\n      0, d3.max(data, function(d) {\n        return d.commits = d.commits || d.additions || d.deletions;\n      })\n    ];\n  };\n\n  ContributorsGraph.init_x_domain = function(data) {\n    return ContributorsGraph.prototype.x_domain = d3.extent(data, function(d) {\n      return d.date;\n    });\n  };\n\n  ContributorsGraph.init_y_domain = function(data) {\n    return ContributorsGraph.prototype.y_domain = [\n      0, d3.max(data, function(d) {\n        return d.commits = d.commits || d.additions || d.deletions;\n      })\n    ];\n  };\n\n  ContributorsGraph.init_domain = function(data) {\n    ContributorsGraph.init_x_domain(data);\n    return ContributorsGraph.init_y_domain(data);\n  };\n\n  ContributorsGraph.set_dates = function(data) {\n    return ContributorsGraph.prototype.dates = data;\n  };\n\n  ContributorsGraph.prototype.set_x_domain = function() {\n    return this.x.domain(this.x_domain);\n  };\n\n  ContributorsGraph.prototype.set_y_domain = function() {\n    return this.y.domain(this.y_domain);\n  };\n\n  ContributorsGraph.prototype.set_domain = function() {\n    this.set_x_domain();\n    return this.set_y_domain();\n  };\n\n  ContributorsGraph.prototype.create_scale = function(width, height) {\n    this.x = d3.time.scale().range([0, width]).clamp(true);\n    return this.y = d3.scale.linear().range([height, 0]).nice();\n  };\n\n  ContributorsGraph.prototype.draw_x_axis = function() {\n    return this.svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0, \" + this.height + \")\").call(this.x_axis);\n  };\n\n  ContributorsGraph.prototype.draw_y_axis = function() {\n    return this.svg.append(\"g\").attr(\"class\", \"y axis\").call(this.y_axis);\n  };\n\n  ContributorsGraph.prototype.set_data = function(data) {\n    return this.data = data;\n  };\n\n  return ContributorsGraph;\n})();\n\nexport const ContributorsMasterGraph = (function(superClass) {\n  extend(ContributorsMasterGraph, superClass);\n\n  function ContributorsMasterGraph(data1) {\n    this.data = data1;\n    this.update_content = bind(this.update_content, this);\n    this.width = $('.content').width() - 70;\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.brush = null;\n    this.x_max_domain = null;\n  }\n\n  ContributorsMasterGraph.prototype.process_dates = function(data) {\n    var dates;\n    dates = this.get_dates(data);\n    this.parse_dates(data);\n    return ContributorsGraph.set_dates(dates);\n  };\n\n  ContributorsMasterGraph.prototype.get_dates = function(data) {\n    return _.pluck(data, 'date');\n  };\n\n  ContributorsMasterGraph.prototype.parse_dates = function(data) {\n    var parseDate;\n    parseDate = d3.time.format(\"%Y-%m-%d\").parse;\n    return data.forEach(function(d) {\n      return d.date = parseDate(d.date);\n    });\n  };\n\n  ContributorsMasterGraph.prototype.create_scale = function() {\n    return ContributorsMasterGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsMasterGraph.prototype.create_axes = function() {\n    this.x_axis = d3.svg.axis().scale(this.x).orient(\"bottom\");\n    return this.y_axis = d3.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsMasterGraph.prototype.create_svg = function() {\n    return this.svg = d3.select(\"#contributors-master\").append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"tint-box\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsMasterGraph.prototype.create_area = function(x, y) {\n    return this.area = d3.svg.area().x(function(d) {\n      return x(d.date);\n    }).y0(this.height).y1(function(d) {\n      d.commits = d.commits || d.additions || d.deletions;\n      return y(d.commits);\n    }).interpolate(\"basis\");\n  };\n\n  ContributorsMasterGraph.prototype.create_brush = function() {\n    return this.brush = d3.svg.brush().x(this.x).on(\"brushend\", this.update_content);\n  };\n\n  ContributorsMasterGraph.prototype.draw_path = function(data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area\").attr(\"d\", this.area);\n  };\n\n  ContributorsMasterGraph.prototype.add_brush = function() {\n    return this.svg.append(\"g\").attr(\"class\", \"selection\").call(this.brush).selectAll(\"rect\").attr(\"height\", this.height);\n  };\n\n  ContributorsMasterGraph.prototype.update_content = function() {\n    ContributorsGraph.set_x_domain(this.brush.empty() ? this.x_max_domain : this.brush.extent());\n    return $(\"#brush_change\").trigger('change');\n  };\n\n  ContributorsMasterGraph.prototype.draw = function() {\n    this.process_dates(this.data);\n    this.create_scale();\n    this.create_axes();\n    ContributorsGraph.init_domain(this.data);\n    this.x_max_domain = this.x_domain;\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.create_brush();\n    this.draw_path(this.data);\n    this.draw_x_axis();\n    this.draw_y_axis();\n    return this.add_brush();\n  };\n\n  ContributorsMasterGraph.prototype.redraw = function() {\n    this.process_dates(this.data);\n    ContributorsGraph.set_y_domain(this.data);\n    this.set_y_domain();\n    this.svg.select(\"path\").datum(this.data);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsMasterGraph;\n})(ContributorsGraph);\n\nexport const ContributorsAuthorGraph = (function(superClass) {\n  extend(ContributorsAuthorGraph, superClass);\n\n  function ContributorsAuthorGraph(data1) {\n    this.data = data1;\n    // Don't split graph size in half for mobile devices.\n    if ($(window).width() < 768) {\n      this.width = $('.content').width() - 80;\n    } else {\n      this.width = ($('.content').width() / 2) - 100;\n    }\n    this.height = 200;\n    this.x = null;\n    this.y = null;\n    this.x_axis = null;\n    this.y_axis = null;\n    this.area = null;\n    this.svg = null;\n    this.list_item = null;\n  }\n\n  ContributorsAuthorGraph.prototype.create_scale = function() {\n    return ContributorsAuthorGraph.__super__.create_scale.call(this, this.width, this.height);\n  };\n\n  ContributorsAuthorGraph.prototype.create_axes = function() {\n    this.x_axis = d3.svg.axis().scale(this.x).orient(\"bottom\").ticks(8);\n    return this.y_axis = d3.svg.axis().scale(this.y).orient(\"left\").ticks(5);\n  };\n\n  ContributorsAuthorGraph.prototype.create_area = function(x, y) {\n    return this.area = d3.svg.area().x(function(d) {\n      var parseDate;\n      parseDate = d3.time.format(\"%Y-%m-%d\").parse;\n      return x(parseDate(d));\n    }).y0(this.height).y1((function(_this) {\n      return function(d) {\n        if (_this.data[d] != null) {\n          return y(_this.data[d]);\n        } else {\n          return y(0);\n        }\n      };\n    })(this)).interpolate(\"basis\");\n  };\n\n  ContributorsAuthorGraph.prototype.create_svg = function() {\n    this.list_item = d3.selectAll(\".person\")[0].pop();\n    return this.svg = d3.select(this.list_item).append(\"svg\").attr(\"width\", this.width + this.MARGIN.left + this.MARGIN.right).attr(\"height\", this.height + this.MARGIN.top + this.MARGIN.bottom).attr(\"class\", \"spark\").append(\"g\").attr(\"transform\", \"translate(\" + this.MARGIN.left + \",\" + this.MARGIN.top + \")\");\n  };\n\n  ContributorsAuthorGraph.prototype.draw_path = function(data) {\n    return this.svg.append(\"path\").datum(data).attr(\"class\", \"area-contributor\").attr(\"d\", this.area);\n  };\n\n  ContributorsAuthorGraph.prototype.draw = function() {\n    this.create_scale();\n    this.create_axes();\n    this.set_domain();\n    this.create_area(this.x, this.y);\n    this.create_svg();\n    this.draw_path(this.dates);\n    this.draw_x_axis();\n    return this.draw_y_axis();\n  };\n\n  ContributorsAuthorGraph.prototype.redraw = function() {\n    this.set_domain();\n    this.svg.select(\"path\").datum(this.dates);\n    this.svg.select(\"path\").attr(\"d\", this.area);\n    this.svg.select(\".x.axis\").call(this.x_axis);\n    return this.svg.select(\".y.axis\").call(this.y_axis);\n  };\n\n  return ContributorsAuthorGraph;\n})(ContributorsGraph);\n\n\n\n// WEBPACK FOOTER //\n// ./graphs/stat_graph_contributors_graph.js","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.0.2\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t}\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width');\n\t\tvar height = this.height = computeDimension(context.canvas,'Height');\n\n\t\t// Firefox requires this to work correctly\n\t\tcontext.canvas.width  = width;\n\t\tcontext.canvas.height = height;\n\n\t\tvar width = this.width = context.canvas.width;\n\t\tvar height = this.height = context.canvas.height;\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)) objClone[key] = value;\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)) base[key] = value;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn == \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define == 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\treturn num.toString().split(\".\")[1].length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\tvar maxValue = max(valuesArray),\n\t\t\t\tminValue = min(valuesArray);\n\n\t\t\t// We need some degree of seperation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (labelTemplateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t;\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t;\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif (t === 1) return 1;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1) return t;\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1 / 2) == 2) return 1;\n\t\t\t\tif (!p) p = 1 * (0.3 * 1.5);\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2) return easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientWidth;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientHeight;\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tcancelAnimFrame(this.animationFrame);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\thelpers.animationLoop(\n\t\t\t\t\tthis.draw,\n\t\t\t\t\tthis.options.animationSteps,\n\t\t\t\t\tthis.options.animationEasing,\n\t\t\t\t\tthis.options.onAnimationProgress,\n\t\t\t\t\tthis.options.onAnimationComplete,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn template(this.options.legendTemplate,this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: ChartElements[0].label,\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n\t\t\t\twithinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle);\n\n\t\t\tctx.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleFontSize *1.5;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleFontSize/2;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize*1.5*afterTitleIndex) + this.fontSize/2) + this.titleFontSize * 1.5;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth + 10) ? firstWidth/2 : this.yLabelWidth + 10;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth + 8){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (this.angleLineWidth > 0){\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max));\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine(function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : dataset.highlightFill || dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : dataset.highlightStroke || dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value){\n\t\t\treturn (Math.PI*2)*(Math.abs(value) / this.total);\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tctx.stroke();\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segement.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tctx.fill();\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/cache/omnibus/src/gitlab-rails/vendor/assets/javascripts/Chart.js\n// module id = syvU\n// module chunks = 20"],"sourceRoot":""}